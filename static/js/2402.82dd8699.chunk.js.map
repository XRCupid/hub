{"version":3,"file":"static/js/2402.82dd8699.chunk.js","mappings":"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","sources":["components/Navigation.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport '../styles/Navigation.css';\nimport RisographHeart from './RisographHeart';\n\ninterface NavDropdownProps {\n  title: string;\n  icon?: string;\n  children: React.ReactNode;\n}\n\nconst NavDropdown: React.FC<NavDropdownProps> = ({ title, icon, children }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [timeoutId, setTimeoutId] = useState<NodeJS.Timeout | null>(null);\n\n  const handleMouseEnter = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n    }\n    setIsOpen(true);\n  };\n\n  const handleMouseLeave = () => {\n    const id = setTimeout(() => {\n      setIsOpen(false);\n    }, 100); // Small delay to allow moving to dropdown\n    setTimeoutId(id);\n  };\n\n  return (\n    <div \n      className=\"nav-dropdown\" \n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <button \n        className=\"nav-dropdown-toggle\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {icon && <span className=\"nav-icon\">{icon}</span>}\n        {title}\n        <span className=\"dropdown-arrow\">‚ñº</span>\n      </button>\n      {isOpen && (\n        <div className=\"nav-dropdown-menu\">\n          {children}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst Navigation: React.FC = () => {\n  return (\n    <nav className=\"main-navigation\">\n      <div className=\"logo risograph-logo\">\n        <NavLink to=\"/\" className=\"logo-link\">\n          <span className=\"logo-text offset-text\">XRCupid</span>\n          <RisographHeart size={24} className=\"logo-heart\" animated />\n        </NavLink>\n      </div>\n      \n      <div className=\"nav-links-group\">\n        {/* Core Experience - Always Visible */}\n        <NavLink to=\"/coach-call\" className={({ isActive }) => isActive ? \"nav-link primary active\" : \"nav-link primary\"}>\n          <span className=\"nav-icon\">üí¨</span>\n          Talk to Coach\n        </NavLink>\n        \n        <NavLink to=\"/dating-simulation\" className={({ isActive }) => isActive ? \"nav-link active\" : \"nav-link\"}>\n          <span className=\"nav-icon\">üíï</span>\n          Practice Dates\n        </NavLink>\n        \n        <NavLink to=\"/sample-lessons\" className={({ isActive }) => isActive ? \"nav-link active\" : \"nav-link\"}>\n          <span className=\"nav-icon\">üìö</span>\n          Lessons\n        </NavLink>\n        \n        <NavLink to=\"/training-hub\" className={({ isActive }) => isActive ? \"nav-link active\" : \"nav-link\"}>\n          <span className=\"nav-icon\">üéì</span>\n          Training Hub\n        </NavLink>\n        \n        <NavLink to=\"/avatar-creation-hub\" className={({ isActive }) => isActive ? \"nav-link active\" : \"nav-link\"}>\n          <span className=\"nav-icon\">üé≠</span>\n          Avatar Studio\n        </NavLink>\n        \n        <NavLink to=\"/conversation-toolkit\" className={({ isActive }) => isActive ? \"nav-link active\" : \"nav-link\"}>\n          <span className=\"nav-icon\">üí°</span>\n          Conversation Toolkit\n        </NavLink>\n        \n        <NavLink to=\"/interactive-curriculum-overview\" className={({ isActive }) => isActive ? \"nav-link active\" : \"nav-link\"}>\n          <span className=\"nav-icon\">üóÇÔ∏è</span>\n          Curriculum\n        </NavLink>\n        \n        {/* Skills & Training */}\n        <NavDropdown title=\"Skills Training\" icon=\"üéØ\">\n          <NavLink to=\"/training-hub\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            <strong>üéì Training Hub</strong>\n          </NavLink>\n          <hr className=\"dropdown-divider\" />\n          <NavLink to=\"/skills-dashboard\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Skills Overview\n          </NavLink>\n          <NavLink to=\"/chat-practice\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Chat Practice\n          </NavLink>\n          <NavLink to=\"/rizz-training\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Conversation Skills\n          </NavLink>\n          <NavLink to=\"/phone-training\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Phone Training\n          </NavLink>\n          <NavLink to=\"/conversation-toolkit\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Conversation Toolkit\n          </NavLink>\n          <NavLink to=\"/skill-tree\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Skill Tree Overview\n          </NavLink>\n          <NavLink to=\"/interactive-curriculum-overview\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Interactive Curriculum\n          </NavLink>\n          <NavLink to=\"/sample-lessons\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n            Sample Lessons\n          </NavLink>\n        </NavDropdown>\n        \n        {/* Dev Tools - Only show in development */}\n        {process.env.NODE_ENV === 'development' && (\n          <NavDropdown title=\"Dev Tools\" icon=\"üîß\">\n            <NavLink to=\"/animation-test\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Animation Tester\n            </NavLink>\n            <NavLink to=\"/morph-target-test\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Morph Targets\n            </NavLink>\n            <NavLink to=\"/avatar-inspector\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Avatar Inspector\n            </NavLink>\n            <NavLink to=\"/avatar-creation-hub\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Avatar Creation Hub\n            </NavLink>\n            <NavLink to=\"/face-puppeting\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Face Puppeting\n            </NavLink>\n            <NavLink to=\"/simple-face-tracking\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Face Tracking Demo\n            </NavLink>\n            <NavLink to=\"/test-convai\" className={({ isActive }) => isActive ? \"dropdown-link active\" : \"dropdown-link\"}>\n              Convai Test\n            </NavLink>\n            <hr className=\"dropdown-divider\" />\n            <button \n              className=\"dropdown-link\"\n              onClick={() => (window as any).diagnostics?.runFullDiagnostic()}\n            >\n              Run Diagnostics\n            </button>\n            <button \n              className=\"dropdown-link\"\n              onClick={() => (window as any).performanceMonitor?.runQuickTest()}\n            >\n              Performance Test\n            </button>\n          </NavDropdown>\n        )}\n      </div>\n      \n      {/* User Profile & Avatar */}\n      <div className=\"nav-user-section\">\n        <NavLink to=\"/avatar-setup\" className=\"avatar-setup-link\">\n          <span className=\"nav-icon\">üë§</span>\n          Customize Avatar\n        </NavLink>\n        <RisographHeart />\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;\n"],"names":["NavDropdown","_ref","title","icon","children","isOpen","setIsOpen","useState","timeoutId","setTimeoutId","_jsxs","className","onMouseEnter","handleMouseEnter","clearTimeout","onMouseLeave","handleMouseLeave","id","setTimeout","onClick","_jsx","Navigation","NavLink","to","RisographHeart","size","animated","_ref2","isActive","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","process"],"sourceRoot":""}