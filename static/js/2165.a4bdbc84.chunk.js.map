{"version":3,"file":"static/js/2165.a4bdbc84.chunk.js","mappings":"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","sources":["components/SimpleAnimationTest.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { OrbitControls, useGLTF, useAnimations } from '@react-three/drei';\nimport * as THREE from 'three';\n\n// List of all available animations\nconst ANIMATIONS = [\n  { name: 'Standing Idle 1', file: '/animations/M_Standing_Idle_001.glb' },\n  { name: 'Standing Idle 2', file: '/animations/M_Standing_Idle_002.glb' },\n  { name: 'Idle Variation 1', file: '/animations/M_Standing_Idle_Variations_001.glb' },\n  { name: 'Idle Variation 2', file: '/animations/M_Standing_Idle_Variations_002.glb' },\n  { name: 'Idle Variation 3', file: '/animations/M_Standing_Idle_Variations_003.glb' },\n  { name: 'Idle Variation 4', file: '/animations/M_Standing_Idle_Variations_004.glb' },\n  { name: 'Idle Variation 5', file: '/animations/M_Standing_Idle_Variations_005.glb' },\n  { name: 'Idle Variation 6', file: '/animations/M_Standing_Idle_Variations_006.glb' },\n  { name: 'Idle Variation 7', file: '/animations/M_Standing_Idle_Variations_007.glb' },\n  { name: 'Idle Variation 8', file: '/animations/M_Standing_Idle_Variations_008.glb' },\n  { name: 'Idle Variation 9', file: '/animations/M_Standing_Idle_Variations_009.glb' },\n  { name: 'Idle Variation 10', file: '/animations/M_Standing_Idle_Variations_010.glb' },\n  { name: 'Talking 1', file: '/animations/M_Talking_Variations_001.glb' },\n  { name: 'Talking 2', file: '/animations/M_Talking_Variations_002.glb' },\n  { name: 'Talking 3', file: '/animations/M_Talking_Variations_003.glb' },\n  { name: 'Talking 4', file: '/animations/M_Talking_Variations_004.glb' },\n  { name: 'Talking 5', file: '/animations/M_Talking_Variations_005.glb' },\n  { name: 'Talking 6', file: '/animations/M_Talking_Variations_006.glb' },\n  { name: 'Talking 7', file: '/animations/M_Talking_Variations_007.glb' },\n  { name: 'Talking 8', file: '/animations/M_Talking_Variations_008.glb' },\n  { name: 'Talking 9', file: '/animations/M_Talking_Variations_009.glb' },\n  { name: 'Talking 10', file: '/animations/M_Talking_Variations_010.glb' },\n  { name: 'Simple Idle', file: '/animations/idle.glb' },\n  { name: 'Simple Talk', file: '/animations/talk.glb' }\n];\n\ninterface AnimatedAvatarProps {\n  animationUrl: string;\n}\n\nfunction AnimatedAvatar({ animationUrl }: AnimatedAvatarProps) {\n  // Load avatar model\n  const avatar = useGLTF('/avatars/AngelChick.glb');\n  \n  // Load animation separately\n  const animation = useGLTF(animationUrl);\n  \n  // Setup animations on the avatar scene\n  const { actions, mixer } = useAnimations(animation.animations, avatar.scene);\n  \n  useEffect(() => {\n    console.log('=== Animation Debug Info ===');\n    console.log('Animation URL:', animationUrl);\n    console.log('Animation clips:', animation.animations);\n    console.log('Actions created:', Object.keys(actions));\n    \n    // Stop all current actions\n    Object.values(actions).forEach(action => {\n      if (action) action.stop();\n    });\n    \n    // Play the first available animation\n    const actionKeys = Object.keys(actions);\n    if (actionKeys.length > 0) {\n      const firstAction = actions[actionKeys[0]];\n      if (firstAction) {\n        console.log(`Playing animation: ${actionKeys[0]}`);\n        firstAction.reset().play();\n      }\n    } else {\n      console.error('No actions available!');\n    }\n  }, [animationUrl, animation, actions]);\n  \n  return <primitive object={avatar.scene} />;\n}\n\nconst SimpleAnimationTest: React.FC = () => {\n  const [selectedAnimation, setSelectedAnimation] = useState(ANIMATIONS[0].file);\n  \n  return (\n    <div style={{ width: '100vw', height: '100vh', backgroundColor: '#1a1a1a' }}>\n      {/* Animation Selector Menu */}\n      <div style={{\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        zIndex: 1000,\n        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n        padding: '20px',\n        borderRadius: '8px',\n        color: 'white'\n      }}>\n        <h3 style={{ margin: '0 0 10px 0' }}>Animation Selector</h3>\n        <select \n          value={selectedAnimation}\n          onChange={(e) => setSelectedAnimation(e.target.value)}\n          style={{\n            width: '250px',\n            padding: '8px',\n            fontSize: '14px',\n            backgroundColor: '#333',\n            color: 'white',\n            border: '1px solid #555',\n            borderRadius: '4px'\n          }}\n        >\n          {ANIMATIONS.map((anim) => (\n            <option key={anim.file} value={anim.file}>\n              {anim.name}\n            </option>\n          ))}\n        </select>\n        <div style={{ marginTop: '10px', fontSize: '12px', opacity: 0.7 }}>\n          Selected: {ANIMATIONS.find(a => a.file === selectedAnimation)?.name}\n        </div>\n      </div>\n      \n      <Canvas \n        camera={{ \n          position: [0, 1, 3],\n          fov: 45\n        }}\n      >\n        <ambientLight intensity={0.5} />\n        <directionalLight position={[5, 5, 5]} intensity={1} />\n        \n        <AnimatedAvatar animationUrl={selectedAnimation} />\n        \n        <OrbitControls \n          target={[0, 1, 0]}\n          enablePan={true}\n          enableZoom={true}\n          enableRotate={true}\n        />\n        \n        <gridHelper args={[10, 10]} />\n      </Canvas>\n    </div>\n  );\n};\n\n// Preload assets\nuseGLTF.preload('/avatars/AngelChick.glb');\nANIMATIONS.forEach(anim => {\n  useGLTF.preload(anim.file);\n});\n\nexport default SimpleAnimationTest;\n"],"names":["ANIMATIONS","name","file","AnimatedAvatar","_ref","animationUrl","avatar","useGLTF","animation","actions","mixer","useAnimations","animations","scene","useEffect","console","log","Object","keys","values","forEach","action","stop","actionKeys","length","firstAction","concat","reset","play","error","_jsx","object","preload","anim","SimpleAnimationTest","_ANIMATIONS$find","selectedAnimation","setSelectedAnimation","useState","_jsxs","style","width","height","backgroundColor","children","position","top","left","zIndex","padding","borderRadius","color","margin","value","onChange","e","target","fontSize","border","map","marginTop","opacity","find","a","Canvas","camera","fov","intensity","OrbitControls","enablePan","enableZoom","enableRotate","args"],"sourceRoot":""}