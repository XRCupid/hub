{"version":3,"file":"static/js/4236.d527e97b.chunk.js","mappings":"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","sources":["components/TrainingModuleCard.tsx","webpack://hub/./src/components/TrainingModuleCard.css?ef53","webpack://hub/./src/components/TrackingDashboard.css?c838","webpack://hub/./src/components/TrainingHub.css?45c0","config/trainingModules.ts","components/TrainingHub.tsx","components/TrackingDashboard.tsx","webpack://hub/./src/components/CoachSelection.css?dc0e","components/CoachSelection.tsx"],"sourcesContent":["import React from 'react';\nimport { TrainingModule, UserProgress, calculateModuleScore, isModuleUnlocked } from '../config/trainingModules';\nimport './TrainingModuleCard.css';\n\ninterface TrainingModuleCardProps {\n  module: TrainingModule;\n  userProgress?: UserProgress;\n  isUnlocked: boolean;\n  coachColor: string;\n  onStartModule: (module: TrainingModule) => void;\n}\n\nconst TrainingModuleCard: React.FC<TrainingModuleCardProps> = ({\n  module,\n  userProgress,\n  isUnlocked,\n  coachColor,\n  onStartModule\n}) => {\n  const isCompleted = userProgress && userProgress.score >= module.successCriteria.minimumScore;\n  const score = userProgress ? userProgress.score : 0;\n  \n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty) {\n      case 'beginner': return '#4CAF50';\n      case 'intermediate': return '#FF9800';\n      case 'advanced': return '#F44336';\n      default: return '#666';\n    }\n  };\n\n  return (\n    <div \n      className={`training-module-card ${!isUnlocked ? 'locked' : ''} ${isCompleted ? 'completed' : ''}`}\n      style={{ borderColor: isUnlocked ? coachColor : '#444' }}\n    >\n      <div className=\"module-header\" style={{ backgroundColor: isUnlocked ? coachColor : '#444' }}>\n        <h3>{module.name}</h3>\n        <span \n          className=\"difficulty-badge\" \n          style={{ backgroundColor: getDifficultyColor(module.difficulty) }}\n        >\n          {module.difficulty}\n        </span>\n      </div>\n      \n      <div className=\"module-body\">\n        <p className=\"module-description\">{module.description}</p>\n        \n        <div className=\"module-info\">\n          <span className=\"duration\">\n            <i className=\"icon-clock\" /> {module.duration} min\n          </span>\n          <span className=\"exercises\">\n            <i className=\"icon-exercise\" /> {module.exercises.length} exercises\n          </span>\n        </div>\n        \n        {isUnlocked && (\n          <div className=\"module-objectives\">\n            <h4>Objectives:</h4>\n            <ul>\n              {module.objectives.slice(0, 3).map((objective, index) => (\n                <li key={index}>{objective}</li>\n              ))}\n              {module.objectives.length > 3 && (\n                <li className=\"more\">+{module.objectives.length - 3} more</li>\n              )}\n            </ul>\n          </div>\n        )}\n        \n        {userProgress && (\n          <div className=\"module-progress\">\n            <div className=\"progress-bar\">\n              <div \n                className=\"progress-fill\" \n                style={{ \n                  width: `${score}%`,\n                  backgroundColor: score >= 70 ? '#4CAF50' : coachColor\n                }}\n              />\n            </div>\n            <div className=\"progress-stats\">\n              <span>Score: {score}%</span>\n              <span>Attempts: {userProgress.attempts}</span>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      <div className=\"module-footer\">\n        {!isUnlocked ? (\n          <button className=\"module-btn locked\" disabled>\n            <i className=\"icon-lock\" /> Complete Prerequisites\n          </button>\n        ) : isCompleted ? (\n          <button \n            className=\"module-btn completed\"\n            onClick={() => onStartModule(module)}\n            style={{ backgroundColor: coachColor }}\n          >\n            <i className=\"icon-replay\" /> Practice Again\n          </button>\n        ) : (\n          <button \n            className=\"module-btn start\"\n            onClick={() => onStartModule(module)}\n            style={{ \n              backgroundColor: 'transparent',\n              borderColor: coachColor,\n              color: coachColor\n            }}\n          >\n            <i className=\"icon-play\" /> Start Module\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TrainingModuleCard;\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {};","// Training Module Configuration for Each Dating Coach\n\nexport interface TrackingMetric {\n  id: string;\n  name: string;\n  description: string;\n  unit: string; // percentage, count, seconds, etc.\n  idealRange?: { min: number; max: number };\n  weight: number; // importance in overall score (0-1)\n}\n\nexport interface TrainingModule {\n  id: string;\n  name: string;\n  coachId: string;\n  description: string;\n  duration: number; // in minutes\n  difficulty: 'beginner' | 'intermediate' | 'advanced';\n  prerequisites?: string[]; // module IDs\n  objectives: string[];\n  exercises: Exercise[];\n  trackingMetrics: TrackingMetric[];\n  successCriteria: SuccessCriteria;\n}\n\nexport interface Exercise {\n  id: string;\n  name: string;\n  type: 'conversation' | 'scenario' | 'mirroring' | 'freestyle' | 'reaction';\n  instructions: string;\n  duration: number; // seconds\n  prompts?: string[];\n  expectedBehaviors: string[];\n}\n\nexport interface SuccessCriteria {\n  minimumScore: number; // 0-100\n  requiredMetrics: { metricId: string; minimumValue: number }[];\n  bonusObjectives?: string[];\n}\n\n// GRACE'S TRAINING MODULES - Charm & Conversation\nexport const GRACE_MODULES: TrainingModule[] = [\n  {\n    id: 'grace-intro-charm',\n    name: 'Introduction to Charm',\n    coachId: 'grace',\n    description: 'Master the fundamentals of charming conversation and social grace',\n    duration: 15,\n    difficulty: 'beginner',\n    objectives: [\n      'Deliver sincere compliments naturally',\n      'Maintain engaging eye contact',\n      'Use open-ended questions effectively',\n      'Practice active listening'\n    ],\n    exercises: [\n      {\n        id: 'compliment-craft',\n        name: 'Compliment Crafting',\n        type: 'conversation',\n        instructions: 'Practice giving specific, sincere compliments that go beyond appearance',\n        duration: 180,\n        prompts: [\n          'Your date just told you about their passion project',\n          'You notice your date has excellent taste in wine',\n          'Your date shares a personal achievement'\n        ],\n        expectedBehaviors: ['Specificity', 'Sincerity', 'Follow-up questions']\n      },\n      {\n        id: 'conversation-flow',\n        name: 'Conversation Flow',\n        type: 'freestyle',\n        instructions: 'Keep a natural conversation going for 3 minutes without awkward pauses',\n        duration: 180,\n        expectedBehaviors: ['Smooth transitions', 'Balanced speaking time', 'Natural follow-ups']\n      }\n    ],\n    trackingMetrics: [\n      {\n        id: 'conversation-flow-score',\n        name: 'Conversation Flow',\n        description: 'Smoothness of topic transitions and lack of awkward pauses',\n        unit: 'percentage',\n        idealRange: { min: 70, max: 100 },\n        weight: 0.3\n      },\n      {\n        id: 'compliment-quality',\n        name: 'Compliment Quality',\n        description: 'Specificity and sincerity of compliments',\n        unit: 'score',\n        idealRange: { min: 7, max: 10 },\n        weight: 0.2\n      },\n      {\n        id: 'question-ratio',\n        name: 'Question Ratio',\n        description: 'Balance of questions asked vs statements made',\n        unit: 'ratio',\n        idealRange: { min: 0.3, max: 0.5 },\n        weight: 0.2\n      },\n      {\n        id: 'active-listening',\n        name: 'Active Listening Score',\n        description: 'References to previous conversation points',\n        unit: 'count',\n        idealRange: { min: 3, max: 10 },\n        weight: 0.3\n      }\n    ],\n    successCriteria: {\n      minimumScore: 70,\n      requiredMetrics: [\n        { metricId: 'conversation-flow-score', minimumValue: 65 },\n        { metricId: 'active-listening', minimumValue: 3 }\n      ]\n    }\n  },\n  {\n    id: 'grace-advanced-etiquette',\n    name: 'Advanced Social Etiquette',\n    coachId: 'grace',\n    description: 'Navigate formal settings and high-stakes social situations with elegance',\n    duration: 20,\n    difficulty: 'advanced',\n    prerequisites: ['grace-intro-charm'],\n    objectives: [\n      'Master formal dining etiquette',\n      'Handle introductions gracefully',\n      'Navigate controversial topics diplomatically',\n      'Demonstrate cultural awareness'\n    ],\n    exercises: [\n      {\n        id: 'formal-dining',\n        name: 'Formal Dining Simulation',\n        type: 'scenario',\n        instructions: 'Navigate a formal dinner date while maintaining conversation',\n        duration: 300,\n        prompts: ['Wine selection', 'Utensil usage', 'Napkin etiquette', 'Toast giving'],\n        expectedBehaviors: ['Proper etiquette', 'Confidence', 'Teaching without condescending']\n      }\n    ],\n    trackingMetrics: [\n      {\n        id: 'etiquette-violations',\n        name: 'Etiquette Violations',\n        description: 'Number of social faux pas committed',\n        unit: 'count',\n        idealRange: { min: 0, max: 2 },\n        weight: 0.4\n      },\n      {\n        id: 'grace-under-pressure',\n        name: 'Grace Under Pressure',\n        description: 'Composure during challenging moments',\n        unit: 'percentage',\n        idealRange: { min: 80, max: 100 },\n        weight: 0.6\n      }\n    ],\n    successCriteria: {\n      minimumScore: 80,\n      requiredMetrics: [\n        { metricId: 'etiquette-violations', minimumValue: 0 },\n        { metricId: 'grace-under-pressure', minimumValue: 75 }\n      ]\n    }\n  }\n];\n\n// POSIE'S TRAINING MODULES - Body Language & Engagement\nexport const POSIE_MODULES: TrainingModule[] = [\n  {\n    id: 'posie-body-basics',\n    name: 'Body Language Basics',\n    coachId: 'posie',\n    description: 'Understand and master the fundamentals of attractive body language',\n    duration: 20,\n    difficulty: 'beginner',\n    objectives: [\n      'Maintain appropriate eye contact',\n      'Use open body posture',\n      'Mirror partner naturally',\n      'Understand personal space dynamics'\n    ],\n    exercises: [\n      {\n        id: 'eye-contact-practice',\n        name: 'Eye Contact Calibration',\n        type: 'mirroring',\n        instructions: 'Practice maintaining eye contact: 70% during listening, 50% while speaking',\n        duration: 120,\n        expectedBehaviors: ['Natural breaks', 'Triangle technique', 'Smiling with eyes']\n      },\n      {\n        id: 'mirroring-exercise',\n        name: 'Natural Mirroring',\n        type: 'mirroring',\n        instructions: 'Subtly mirror your partner\\'s gestures and energy level',\n        duration: 180,\n        expectedBehaviors: ['Delayed mirroring', 'Partial matching', 'Energy synchronization']\n      }\n    ],\n    trackingMetrics: [\n      {\n        id: 'eye-contact-duration',\n        name: 'Eye Contact Duration',\n        description: 'Percentage of appropriate eye contact maintained',\n        unit: 'percentage',\n        idealRange: { min: 50, max: 70 },\n        weight: 0.3\n      },\n      {\n        id: 'posture-openness',\n        name: 'Posture Openness',\n        description: 'Openness and invitation of body positioning',\n        unit: 'score',\n        idealRange: { min: 7, max: 10 },\n        weight: 0.2\n      },\n      {\n        id: 'mirroring-naturalness',\n        name: 'Mirroring Naturalness',\n        description: 'How naturally you mirror without being obvious',\n        unit: 'score',\n        idealRange: { min: 6, max: 9 },\n        weight: 0.3\n      },\n      {\n        id: 'proximity-comfort',\n        name: 'Proximity Comfort',\n        description: 'Appropriate use of personal space',\n        unit: 'score',\n        idealRange: { min: 7, max: 10 },\n        weight: 0.2\n      }\n    ],\n    successCriteria: {\n      minimumScore: 65,\n      requiredMetrics: [\n        { metricId: 'eye-contact-duration', minimumValue: 40 },\n        { metricId: 'posture-openness', minimumValue: 6 }\n      ]\n    }\n  },\n  {\n    id: 'posie-chemistry-creation',\n    name: 'Creating Chemistry Through Presence',\n    coachId: 'posie',\n    description: 'Advanced techniques for building romantic tension and connection',\n    duration: 25,\n    difficulty: 'intermediate',\n    prerequisites: ['posie-body-basics'],\n    objectives: [\n      'Create tension through proximity',\n      'Use touch appropriately',\n      'Build anticipation with pauses',\n      'Synchronize breathing and energy'\n    ],\n    exercises: [\n      {\n        id: 'tension-building',\n        name: 'Tension Building',\n        type: 'scenario',\n        instructions: 'Create romantic tension without words, using only presence and positioning',\n        duration: 240,\n        prompts: ['Lean in moment', 'Almost touch', 'Meaningful pause', 'Energy spike'],\n        expectedBehaviors: ['Gradual escalation', 'Reading signals', 'Creating anticipation']\n      }\n    ],\n    trackingMetrics: [\n      {\n        id: 'tension-level',\n        name: 'Romantic Tension Level',\n        description: 'Measured chemistry and attraction indicators',\n        unit: 'score',\n        idealRange: { min: 6, max: 9 },\n        weight: 0.4\n      },\n      {\n        id: 'touch-appropriateness',\n        name: 'Touch Appropriateness',\n        description: 'Timing and placement of physical contact',\n        unit: 'score',\n        idealRange: { min: 8, max: 10 },\n        weight: 0.3\n      },\n      {\n        id: 'energy-synchronization',\n        name: 'Energy Sync',\n        description: 'How well you match and lead energy levels',\n        unit: 'percentage',\n        idealRange: { min: 70, max: 90 },\n        weight: 0.3\n      }\n    ],\n    successCriteria: {\n      minimumScore: 75,\n      requiredMetrics: [\n        { metricId: 'tension-level', minimumValue: 6 },\n        { metricId: 'touch-appropriateness', minimumValue: 7 }\n      ]\n    }\n  }\n];\n\n// RIZZO'S TRAINING MODULES - Confidence & Charisma\nexport const RIZZO_MODULES: TrainingModule[] = [\n  {\n    id: 'rizzo-confidence-101',\n    name: 'Confidence Bootcamp',\n    coachId: 'rizzo',\n    description: 'Build unshakeable confidence and magnetic presence',\n    duration: 18,\n    difficulty: 'beginner',\n    objectives: [\n      'Project confidence through voice and posture',\n      'Handle rejection with style',\n      'Make bold first moves',\n      'Own your sexuality'\n    ],\n    exercises: [\n      {\n        id: 'rejection-recovery',\n        name: 'Rejection Recovery',\n        type: 'reaction',\n        instructions: 'Practice handling rejection with humor and grace',\n        duration: 150,\n        prompts: [\n          'They say they have a partner',\n          'They\\'re not interested',\n          'They give you a fake number'\n        ],\n        expectedBehaviors: ['Graceful acceptance', 'Humor', 'Quick recovery', 'No bitterness']\n      },\n      {\n        id: 'bold-opener',\n        name: 'Bold Openers',\n        type: 'conversation',\n        instructions: 'Deliver confident opening lines that stand out',\n        duration: 120,\n        prompts: ['Bar approach', 'Coffee shop', 'Gym encounter', 'Bookstore browse'],\n        expectedBehaviors: ['Confidence', 'Originality', 'Follow-through', 'Reading the room']\n      }\n    ],\n    trackingMetrics: [\n      {\n        id: 'confidence-projection',\n        name: 'Confidence Projection',\n        description: 'Overall confidence in voice, posture, and delivery',\n        unit: 'score',\n        idealRange: { min: 7, max: 10 },\n        weight: 0.4\n      },\n      {\n        id: 'recovery-speed',\n        name: 'Recovery Speed',\n        description: 'How quickly you bounce back from awkward moments',\n        unit: 'seconds',\n        idealRange: { min: 1, max: 5 },\n        weight: 0.2\n      },\n      {\n        id: 'boldness-score',\n        name: 'Boldness Score',\n        description: 'Willingness to take risks and make moves',\n        unit: 'score',\n        idealRange: { min: 7, max: 9 },\n        weight: 0.4\n      }\n    ],\n    successCriteria: {\n      minimumScore: 70,\n      requiredMetrics: [\n        { metricId: 'confidence-projection', minimumValue: 6 },\n        { metricId: 'boldness-score', minimumValue: 6 }\n      ]\n    }\n  },\n  {\n    id: 'rizzo-banter-master',\n    name: 'Banter & Sexual Tension',\n    coachId: 'rizzo',\n    description: 'Master the art of flirty banter and building sexual tension',\n    duration: 22,\n    difficulty: 'intermediate',\n    prerequisites: ['rizzo-confidence-101'],\n    objectives: [\n      'Deliver witty comebacks',\n      'Use innuendo tastefully',\n      'Create push-pull dynamics',\n      'Build sexual tension verbally'\n    ],\n    exercises: [\n      {\n        id: 'witty-banter',\n        name: 'Witty Banter Tennis',\n        type: 'conversation',\n        instructions: 'Engage in playful verbal sparring with increasing intensity',\n        duration: 240,\n        prompts: ['Tease response', 'Double entendre', 'Playful challenge', 'Flirty comeback'],\n        expectedBehaviors: ['Quick wit', 'Playfulness', 'Calibration', 'Escalation']\n      }\n    ],\n    trackingMetrics: [\n      {\n        id: 'wit-speed',\n        name: 'Response Speed',\n        description: 'How quickly you deliver comebacks',\n        unit: 'seconds',\n        idealRange: { min: 0.5, max: 3 },\n        weight: 0.3\n      },\n      {\n        id: 'banter-quality',\n        name: 'Banter Quality',\n        description: 'Cleverness and appropriateness of responses',\n        unit: 'score',\n        idealRange: { min: 7, max: 10 },\n        weight: 0.4\n      },\n      {\n        id: 'sexual-tension',\n        name: 'Sexual Tension Level',\n        description: 'Ability to create and maintain attraction',\n        unit: 'score',\n        idealRange: { min: 6, max: 8 },\n        weight: 0.3\n      }\n    ],\n    successCriteria: {\n      minimumScore: 75,\n      requiredMetrics: [\n        { metricId: 'banter-quality', minimumValue: 7 },\n        { metricId: 'sexual-tension', minimumValue: 5 }\n      ]\n    }\n  }\n];\n\n// Progress tracking interface\nexport interface UserProgress {\n  userId: string;\n  moduleId: string;\n  completionDate?: Date;\n  score: number;\n  metricScores: { [metricId: string]: number };\n  attempts: number;\n  timeSpent: number; // in seconds\n  notes?: string;\n}\n\n// Helper functions\nexport function getAllModules(): TrainingModule[] {\n  return [...GRACE_MODULES, ...POSIE_MODULES, ...RIZZO_MODULES];\n}\n\nexport function getModulesByCoach(coachId: string): TrainingModule[] {\n  return getAllModules().filter(module => module.coachId === coachId);\n}\n\nexport function getModuleById(moduleId: string): TrainingModule | undefined {\n  return getAllModules().find(module => module.id === moduleId);\n}\n\nexport function calculateModuleScore(\n  metricScores: { [metricId: string]: number },\n  module: TrainingModule\n): number {\n  let totalScore = 0;\n  let totalWeight = 0;\n\n  module.trackingMetrics.forEach(metric => {\n    const score = metricScores[metric.id] || 0;\n    const normalizedScore = metric.idealRange\n      ? Math.min(100, (score / metric.idealRange.max) * 100)\n      : score;\n    \n    totalScore += normalizedScore * metric.weight;\n    totalWeight += metric.weight;\n  });\n\n  return totalWeight > 0 ? Math.round(totalScore / totalWeight) : 0;\n}\n\nexport function isModuleUnlocked(\n  moduleId: string,\n  userProgress: UserProgress[]\n): boolean {\n  const module = getModuleById(moduleId);\n  if (!module || !module.prerequisites) return true;\n\n  return module.prerequisites.every(prereqId => {\n    const progress = userProgress.find(p => p.moduleId === prereqId);\n    return progress && progress.score >= module.successCriteria.minimumScore;\n  });\n}\n","import React, { useState, useEffect } from 'react';\nimport { COACHES, CoachProfile, getCoachById } from '../config/coachConfig';\nimport { getModulesByCoach, TrainingModule, UserProgress, isModuleUnlocked } from '../config/trainingModules';\nimport CoachSelection from './CoachSelection';\nimport TrainingModuleCard from './TrainingModuleCard';\nimport TrackingDashboard from './TrackingDashboard';\nimport './TrainingHub.css';\nimport { useNavigate } from 'react-router-dom';\n\n// Mock user progress - in production this would come from a database\nconst mockUserProgress: UserProgress[] = [];\n\ninterface TrainingHubProps {\n  onStartModule?: (module: TrainingModule, coach: CoachProfile) => void;\n}\n\nconst TrainingHub: React.FC<TrainingHubProps> = ({ onStartModule }) => {\n  const [selectedCoach, setSelectedCoach] = useState<CoachProfile | null>(null);\n  const [selectedModule, setSelectedModule] = useState<TrainingModule | null>(null);\n  const [userProgress, setUserProgress] = useState<UserProgress[]>(mockUserProgress);\n  const [showDashboard, setShowDashboard] = useState(false);\n  const navigate = useNavigate();\n\n  const handleCoachSelect = (coach: CoachProfile) => {\n    setSelectedCoach(coach);\n    setSelectedModule(null);\n    setShowDashboard(false);\n  };\n\n  const handleModuleStart = (module: TrainingModule) => {\n    setSelectedModule(module);\n    if (onStartModule && selectedCoach) {\n      onStartModule(module, selectedCoach);\n    }\n  };\n\n  const modules = selectedCoach ? getModulesByCoach(selectedCoach.id) : [];\n\n  // Mock tracking data for demo\n  const mockMetrics = selectedModule ? selectedModule.trackingMetrics.map(metric => ({\n    metric,\n    currentValue: Math.random() * (metric.idealRange?.max || 10),\n    history: []\n  })) : [];\n\n  return (\n    <div className=\"training-hub\">\n      <div className=\"hub-header\">\n        <h1>XRCupid Training Hub</h1>\n        <p className=\"hub-subtitle\">Master the art of romance with personalized coaching</p>\n        <button \n          className=\"hume-test-btn\"\n          onClick={() => navigate('/hume-test')}\n          style={{\n            position: 'absolute',\n            top: '20px',\n            right: '20px',\n            background: 'linear-gradient(135deg, #7c3aed 0%, #ec4899 100%)',\n            border: 'none',\n            color: 'white',\n            padding: '10px 20px',\n            borderRadius: '8px',\n            cursor: 'pointer',\n            fontWeight: '600',\n            fontSize: '14px'\n          }}\n        >\n          🧪 Hume AI Test\n        </button>\n      </div>\n\n      {!selectedCoach ? (\n        <CoachSelection \n          onSelectCoach={handleCoachSelect}\n          selectedCoachId={undefined}\n        />\n      ) : (\n        <div className=\"training-content\">\n          <div className=\"coach-info-bar\" style={{ backgroundColor: selectedCoach.color }}>\n            <div className=\"coach-details\">\n              <h2>Training with {selectedCoach.name}</h2>\n              <p>{selectedCoach.personality} coach</p>\n            </div>\n            <button \n              className=\"change-coach-btn\"\n              onClick={() => setSelectedCoach(null)}\n            >\n              Change Coach\n            </button>\n          </div>\n\n          <div className=\"training-layout\">\n            <div className=\"modules-section\">\n              <h3>Available Training Modules</h3>\n              <div className=\"modules-grid\">\n                {modules.map(module => {\n                  const progress = userProgress.find(p => p.moduleId === module.id);\n                  const unlocked = isModuleUnlocked(module.id, userProgress);\n                  \n                  return (\n                    <TrainingModuleCard\n                      key={module.id}\n                      module={module}\n                      userProgress={progress}\n                      isUnlocked={unlocked}\n                      coachColor={selectedCoach.color}\n                      onStartModule={handleModuleStart}\n                    />\n                  );\n                })}\n              </div>\n            </div>\n\n            {selectedModule && (\n              <div className=\"module-details\">\n                <div className=\"details-header\">\n                  <h3>Module: {selectedModule.name}</h3>\n                  <button \n                    className=\"dashboard-toggle\"\n                    onClick={() => setShowDashboard(!showDashboard)}\n                  >\n                    {showDashboard ? 'Hide' : 'Show'} Live Tracking\n                  </button>\n                </div>\n\n                <div className=\"module-exercises\">\n                  <h4>Exercises in this module:</h4>\n                  {selectedModule.exercises.map((exercise, index) => (\n                    <div key={exercise.id} className=\"exercise-item\">\n                      <span className=\"exercise-number\">{index + 1}</span>\n                      <div className=\"exercise-info\">\n                        <h5>{exercise.name}</h5>\n                        <p>{exercise.instructions}</p>\n                        <span className=\"exercise-duration\">{exercise.duration}s</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n\n                {showDashboard && (\n                  <TrackingDashboard\n                    metrics={mockMetrics}\n                    coachColor={selectedCoach.color}\n                    sessionActive={false}\n                  />\n                )}\n\n                <div className=\"module-actions\">\n                  <button \n                    className=\"start-training-btn\"\n                    style={{ backgroundColor: selectedCoach.color }}\n                    onClick={() => {\n                      // This would navigate to the actual training session\n                      console.log('Starting training:', selectedModule.name);\n                      if (onStartModule && selectedCoach) {\n                        onStartModule(selectedModule, selectedCoach);\n                      }\n                    }}\n                  >\n                    Start Training Session\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TrainingHub;\n","import React, { useState } from 'react';\nimport { TrackingMetric } from '../config/trainingModules';\nimport './TrackingDashboard.css';\n\ninterface MetricData {\n  metric: TrackingMetric;\n  currentValue: number;\n  history: { timestamp: Date; value: number }[];\n}\n\ninterface TrackingDashboardProps {\n  metrics: MetricData[];\n  coachColor: string;\n  sessionActive: boolean;\n}\n\nconst TrackingDashboard: React.FC<TrackingDashboardProps> = ({\n  metrics,\n  coachColor,\n  sessionActive\n}) => {\n  const [expandedMetric, setExpandedMetric] = useState<string | null>(null);\n\n  const getMetricStatus = (metric: TrackingMetric, value: number): 'excellent' | 'good' | 'needs-work' => {\n    if (!metric.idealRange) return 'good';\n    \n    if (value >= metric.idealRange.min && value <= metric.idealRange.max) {\n      return 'excellent';\n    } else if (\n      value >= metric.idealRange.min * 0.8 && \n      value <= metric.idealRange.max * 1.2\n    ) {\n      return 'good';\n    }\n    return 'needs-work';\n  };\n\n  const getStatusColor = (status: string): string => {\n    switch (status) {\n      case 'excellent': return '#4CAF50';\n      case 'good': return '#FFC107';\n      case 'needs-work': return '#F44336';\n      default: return '#666';\n    }\n  };\n\n  const formatValue = (value: number, unit: string): string => {\n    switch (unit) {\n      case 'percentage':\n        return `${Math.round(value)}%`;\n      case 'seconds':\n        return `${value.toFixed(1)}s`;\n      case 'ratio':\n        return value.toFixed(2);\n      case 'count':\n        return Math.round(value).toString();\n      case 'score':\n        return `${value.toFixed(1)}/10`;\n      default:\n        return value.toString();\n    }\n  };\n\n  return (\n    <div className=\"tracking-dashboard\">\n      <div className=\"dashboard-header\">\n        <h3>Real-time Performance Tracking</h3>\n        <div className={`session-indicator ${sessionActive ? 'active' : ''}`}>\n          <span className=\"indicator-dot\" />\n          {sessionActive ? 'Recording' : 'Paused'}\n        </div>\n      </div>\n\n      <div className=\"metrics-grid\">\n        {metrics.map((metricData) => {\n          const status = getMetricStatus(metricData.metric, metricData.currentValue);\n          const isExpanded = expandedMetric === metricData.metric.id;\n          \n          return (\n            <div\n              key={metricData.metric.id}\n              className={`metric-card ${status} ${isExpanded ? 'expanded' : ''}`}\n              onClick={() => setExpandedMetric(isExpanded ? null : metricData.metric.id)}\n            >\n              <div className=\"metric-header\">\n                <h4>{metricData.metric.name}</h4>\n                <div \n                  className=\"metric-value\"\n                  style={{ color: getStatusColor(status) }}\n                >\n                  {formatValue(metricData.currentValue, metricData.metric.unit)}\n                </div>\n              </div>\n\n              <div className=\"metric-body\">\n                <p className=\"metric-description\">{metricData.metric.description}</p>\n                \n                {metricData.metric.idealRange && (\n                  <div className=\"ideal-range\">\n                    <span className=\"range-label\">Ideal Range:</span>\n                    <span className=\"range-value\">\n                      {formatValue(metricData.metric.idealRange.min, metricData.metric.unit)}\n                      {' - '}\n                      {formatValue(metricData.metric.idealRange.max, metricData.metric.unit)}\n                    </span>\n                  </div>\n                )}\n\n                <div className=\"metric-progress\">\n                  <div className=\"progress-track\">\n                    <div \n                      className=\"progress-indicator\"\n                      style={{\n                        left: `${Math.min(100, Math.max(0, (metricData.currentValue / 10) * 100))}%`,\n                        backgroundColor: getStatusColor(status)\n                      }}\n                    />\n                  </div>\n                </div>\n\n                {isExpanded && metricData.history.length > 0 && (\n                  <div className=\"metric-history\">\n                    <h5>Recent History</h5>\n                    <div className=\"history-items\">\n                      {metricData.history.slice(-5).map((item, index) => (\n                        <div key={index} className=\"history-item\">\n                          <span className=\"history-time\">\n                            {new Date(item.timestamp).toLocaleTimeString()}\n                          </span>\n                          <span className=\"history-value\">\n                            {formatValue(item.value, metricData.metric.unit)}\n                          </span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              <div className=\"metric-weight\">\n                <div \n                  className=\"weight-bar\"\n                  style={{ \n                    width: `${metricData.metric.weight * 100}%`,\n                    backgroundColor: coachColor\n                  }}\n                />\n                <span className=\"weight-label\">\n                  {Math.round(metricData.metric.weight * 100)}% weight\n                </span>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"dashboard-footer\">\n        <div className=\"overall-score\">\n          <span className=\"score-label\">Overall Module Score:</span>\n          <span className=\"score-value\" style={{ color: coachColor }}>\n            {Math.round(\n              metrics.reduce((sum, m) => {\n                const status = getMetricStatus(m.metric, m.currentValue);\n                const score = status === 'excellent' ? 100 : status === 'good' ? 75 : 50;\n                return sum + (score * m.metric.weight);\n              }, 0) / metrics.reduce((sum, m) => sum + m.metric.weight, 0)\n            )}%\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TrackingDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport { COACHES, CoachProfile } from '../config/coachConfig';\nimport RisographAngel from './RisographAngel';\nimport RisographHeart from './RisographHeart';\nimport './CoachSelection.css';\n\ninterface CoachSelectionProps {\n  onSelectCoach: (coach: CoachProfile) => void;\n  selectedCoachId?: string;\n}\n\nconst CoachSelection: React.FC<CoachSelectionProps> = ({ onSelectCoach, selectedCoachId }) => {\n  const coaches = Object.values(COACHES);\n\n  return (\n    <div className=\"coach-selection-container risograph-container\">\n      <div className=\"selection-hero\">\n        <RisographAngel size={100} className=\"hero-angel-small\" />\n        <h2 className=\"coach-selection-title offset-text\">\n          <span className=\"title-main\">Choose Your Dating Coach</span>\n          <RisographHeart size={35} className=\"title-heart\" animated />\n        </h2>\n        <p className=\"coach-selection-subtitle\">Each coach specializes in different aspects of romance</p>\n      </div>\n      \n      <div className=\"coach-cards\">\n        {coaches.map((coach) => (\n          <div \n            key={coach.id} \n            className={`coach-card riso-card ${selectedCoachId === coach.id ? 'selected' : ''}`}\n            onClick={() => onSelectCoach(coach)}\n            style={{ borderColor: coach.color }}\n          >\n            <div className=\"coach-card-decoration\">\n              <RisographHeart size={20} />\n            </div>\n            <div className=\"coach-card-header\" style={{ backgroundColor: coach.color }}>\n              <h3>{coach.name}</h3>\n            </div>\n            \n            <div className=\"coach-card-body\">\n              <p className=\"coach-description\">{coach.description}</p>\n              \n              <div className=\"coach-specialties\">\n                <h4>Specializes in:</h4>\n                <div className=\"specialty-tags\">\n                  {coach.specialty.slice(0, 3).map((spec, index) => (\n                    <span key={index} className=\"specialty-tag\" style={{ backgroundColor: `${coach.color}20`, color: coach.color }}>\n                      {spec}\n                    </span>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"coach-personality\">\n                <span className=\"personality-badge\" style={{ color: coach.color }}>\n                  {coach.personality} personality\n                </span>\n              </div>\n            </div>\n            \n            <div className=\"coach-card-footer\">\n              <button \n                className=\"select-coach-btn\"\n                style={{ \n                  backgroundColor: selectedCoachId === coach.id ? coach.color : 'transparent',\n                  borderColor: coach.color,\n                  color: selectedCoachId === coach.id ? 'white' : coach.color\n                }}\n              >\n                {selectedCoachId === coach.id ? 'Selected' : 'Select Coach'}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CoachSelection;\n"],"names":["_ref","module","userProgress","isUnlocked","coachColor","onStartModule","isCompleted","score","successCriteria","minimumScore","_jsxs","className","concat","style","borderColor","children","backgroundColor","_jsx","name","difficulty","getDifficultyColor","description","duration","exercises","length","objectives","slice","map","objective","index","width","attempts","onClick","color","disabled","GRACE_MODULES","id","coachId","type","instructions","prompts","expectedBehaviors","trackingMetrics","unit","idealRange","min","max","weight","requiredMetrics","metricId","minimumValue","prerequisites","POSIE_MODULES","RIZZO_MODULES","getAllModules","isModuleUnlocked","moduleId","find","getModuleById","every","prereqId","progress","p","mockUserProgress","selectedCoach","setSelectedCoach","useState","selectedModule","setSelectedModule","setUserProgress","showDashboard","setShowDashboard","navigate","useNavigate","handleModuleStart","modules","filter","mockMetrics","metric","_metric$idealRange","currentValue","Math","random","history","position","top","right","background","border","padding","borderRadius","cursor","fontWeight","fontSize","personality","unlocked","TrainingModuleCard","exercise","TrackingDashboard","metrics","sessionActive","console","log","CoachSelection","onSelectCoach","coach","selectedCoachId","undefined","expandedMetric","setExpandedMetric","getMetricStatus","value","getStatusColor","status","formatValue","round","toFixed","toString","metricData","isExpanded","left","item","Date","timestamp","toLocaleTimeString","reduce","sum","m","coaches","Object","values","COACHES","RisographAngel","size","RisographHeart","animated","specialty","spec"],"sourceRoot":""}