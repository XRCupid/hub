{"version":3,"file":"static/js/5198.f0e498dc.chunk.js","mappings":"gMAWO,MAAMA,EAA0DC,IAIhE,IAJiE,UACtEC,EAAS,SACTC,EAAW,CAAC,EAAG,EAAG,GAAE,MACpBC,EAAQ,GACTH,EACC,MAAMI,GAAWC,EAAAA,EAAAA,QAAoB,OAC/B,MAAEC,IAAUC,EAAAA,EAAAA,GAAQN,GAGpBO,GAAcC,EAAAA,EAAAA,UAAQ,IAAMH,EAAMI,SAAS,CAACJ,IAG5CK,GAAcN,EAAAA,EAAAA,QAA0B,MACxCO,GAAeP,EAAAA,EAAAA,QAA0B,MAkD/C,OA/CAQ,EAAAA,EAAAA,YAAU,KACHL,IAELM,QAAQC,IAAI,oCAEZP,EAAYQ,UAAUC,IACpB,GAAIA,aAAiBC,EAAAA,KAAY,CAC/B,MAAMC,EAAOF,EAAME,KAAKC,cACxBN,QAAQC,IAAI,wBAAyBE,EAAME,OAEtCA,EAAKE,SAAS,YAAcF,EAAKE,SAAS,UAAYF,EAAKE,SAAS,mBAAqBF,EAAKE,SAAS,UAC1GV,EAAYW,QAAUL,EACtBH,QAAQC,IAAI,kCAAmCE,EAAME,QAElDA,EAAKE,SAAS,aAAeF,EAAKE,SAAS,UAAYF,EAAKE,SAAS,oBAAsBF,EAAKE,SAAS,UAC5GT,EAAaU,QAAUL,EACvBH,QAAQC,IAAI,mCAAoCE,EAAME,MAE1D,KAIER,EAAYW,UACdX,EAAYW,QAAQC,SAASC,EAAIC,KAAKC,GAAK,EAC3CZ,QAAQC,IAAI,sCAEVH,EAAaU,UACfV,EAAaU,QAAQC,SAASC,GAAKC,KAAKC,GAAK,EAC7CZ,QAAQC,IAAI,0CAEb,CAACP,KAGJmB,EAAAA,EAAAA,IAAUC,IACR,MAAMC,EAAOD,EAAME,MAAMC,iBAErBpB,EAAYW,UAEdX,EAAYW,QAAQC,SAASC,EAAIC,KAAKC,GAAK,EAAyB,GAArBD,KAAKO,IAAW,EAAPH,IAGtDjB,EAAaU,UAEfV,EAAaU,QAAQC,SAASC,GAAKC,KAAKC,GAAK,EAAmC,GAA/BD,KAAKO,IAAW,EAAPH,EAAWJ,KAAKC,SAK5EO,EAAAA,EAAAA,KAAA,SAAOC,IAAK9B,EAAUF,SAAUA,EAAUC,MAAOA,EAAMgC,SACpD3B,IAAeyB,EAAAA,EAAAA,KAAA,aAAWG,OAAQ5B,M","sources":["components/SimpleArmTestAvatar.tsx"],"sourcesContent":["import React, { useRef, useEffect, useMemo } from 'react';\nimport * as THREE from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport { useGLTF } from '@react-three/drei';\n\ninterface SimpleArmTestAvatarProps {\n  avatarUrl: string;\n  position?: [number, number, number];\n  scale?: number;\n}\n\nexport const SimpleArmTestAvatar: React.FC<SimpleArmTestAvatarProps> = ({\n  avatarUrl,\n  position = [0, 0, 0],\n  scale = 1\n}) => {\n  const groupRef = useRef<THREE.Group>(null);\n  const { scene } = useGLTF(avatarUrl);\n  \n  // Clone the scene\n  const clonedScene = useMemo(() => scene.clone(), [scene]);\n  \n  // Bone references\n  const leftArmBone = useRef<THREE.Bone | null>(null);\n  const rightArmBone = useRef<THREE.Bone | null>(null);\n  \n  // Find bones\n  useEffect(() => {\n    if (!clonedScene) return;\n    \n    console.log('[SimpleArmTest] Finding bones...');\n    \n    clonedScene.traverse((child) => {\n      if (child instanceof THREE.Bone) {\n        const name = child.name.toLowerCase();\n        console.log('[SimpleArmTest] Bone:', child.name);\n        \n        if ((name.includes('leftarm') || name.includes('arm_l') || name.includes('leftupperarm')) && !name.includes('fore')) {\n          leftArmBone.current = child;\n          console.log('[SimpleArmTest] Found left arm:', child.name);\n        }\n        if ((name.includes('rightarm') || name.includes('arm_r') || name.includes('rightupperarm')) && !name.includes('fore')) {\n          rightArmBone.current = child;\n          console.log('[SimpleArmTest] Found right arm:', child.name);\n        }\n      }\n    });\n    \n    // Immediately set arms down to test\n    if (leftArmBone.current) {\n      leftArmBone.current.rotation.z = Math.PI / 4; // 45 degrees down\n      console.log('[SimpleArmTest] Set left arm down');\n    }\n    if (rightArmBone.current) {\n      rightArmBone.current.rotation.z = -Math.PI / 4; // 45 degrees down\n      console.log('[SimpleArmTest] Set right arm down');\n    }\n  }, [clonedScene]);\n  \n  // Animate arms to verify they can move\n  useFrame((state) => {\n    const time = state.clock.getElapsedTime();\n    \n    if (leftArmBone.current) {\n      // Wave left arm\n      leftArmBone.current.rotation.z = Math.PI / 4 + Math.sin(time * 2) * 0.3;\n    }\n    \n    if (rightArmBone.current) {\n      // Wave right arm\n      rightArmBone.current.rotation.z = -Math.PI / 4 + Math.sin(time * 2 + Math.PI) * 0.3;\n    }\n  });\n  \n  return (\n    <group ref={groupRef} position={position} scale={scale}>\n      {clonedScene && <primitive object={clonedScene} />}\n    </group>\n  );\n};\n"],"names":["SimpleArmTestAvatar","_ref","avatarUrl","position","scale","groupRef","useRef","scene","useGLTF","clonedScene","useMemo","clone","leftArmBone","rightArmBone","useEffect","console","log","traverse","child","THREE","name","toLowerCase","includes","current","rotation","z","Math","PI","useFrame","state","time","clock","getElapsedTime","sin","_jsx","ref","children","object"],"sourceRoot":""}