{"version":3,"file":"static/js/2760.40dbddc7.chunk.js","mappings":"0MAKA,SAASA,KACOC,EAAAA,EAAAA,QAAoB,MAAlC,MACM,MAAEC,IAAUC,EAAAA,EAAAA,GAAQ,4BACpB,WAAEC,IAAeD,EAAAA,EAAAA,GAAQ,qDACzBE,GAAWJ,EAAAA,EAAAA,QAAoC,MAuBrD,OArBAK,EAAAA,EAAAA,YAAU,KACR,GAAIJ,GAASE,GAAcA,EAAWG,OAAS,EAAG,CAChDC,QAAQC,IAAI,uCAAwCL,EAAWG,QAG/D,MAAMG,EAAQ,IAAIC,EAAAA,eAAqBT,GACvCG,EAASO,QAAUF,EAGJA,EAAMG,WAAWT,EAAW,IACpCU,OACPN,QAAQC,IAAI,oBACd,IACC,CAACP,EAAOE,KAEXW,EAAAA,EAAAA,IAAS,CAACC,EAAOC,KACXZ,EAASO,SACXP,EAASO,QAAQM,OAAOD,OAIrBE,EAAAA,EAAAA,KAAA,aAAWC,OAAQlB,EAAOmB,MAAO,IAAKC,SAAU,CAAC,GAAI,IAAK,IACnE,CAEe,SAASC,IACtB,OACEJ,EAAAA,EAAAA,KAAA,OAAKK,MAAO,CAAEC,MAAO,QAASC,OAAQ,SAAUC,UAC9CC,EAAAA,EAAAA,MAACC,EAAAA,GAAM,CAACC,OAAQ,CAAER,SAAU,CAAC,EAAG,IAAK,KAAMS,IAAK,IAAKJ,SAAA,EACnDR,EAAAA,EAAAA,KAAA,gBAAca,UAAW,MACzBb,EAAAA,EAAAA,KAAA,oBAAkBG,SAAU,CAAC,GAAI,GAAI,GAAIU,UAAW,KACpDb,EAAAA,EAAAA,KAACnB,EAAc,KACfmB,EAAAA,EAAAA,KAACc,EAAAA,EAAa,KACdd,EAAAA,EAAAA,KAAA,cAAYe,KAAM,CAAC,IAAK,UAIhC,CAGA/B,EAAAA,EAAQgC,QAAQ,2BAChBhC,EAAAA,EAAQgC,QAAQ,oD","sources":["components/SimpleAvatarAnimationTest.tsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { OrbitControls, useGLTF } from '@react-three/drei';\nimport * as THREE from 'three';\n\nfunction AnimatedAvatar() {\n  const group = useRef<THREE.Group>(null);\n  const { scene } = useGLTF('/avatars/AngelChick.glb');\n  const { animations } = useGLTF('/animations/feminine/idle/F_Standing_Idle_001.glb');\n  const mixerRef = useRef<THREE.AnimationMixer | null>(null);\n  \n  useEffect(() => {\n    if (scene && animations && animations.length > 0) {\n      console.log('Avatar loaded, animations available:', animations.length);\n      \n      // Create mixer with the scene\n      const mixer = new THREE.AnimationMixer(scene);\n      mixerRef.current = mixer;\n      \n      // Play the first animation\n      const action = mixer.clipAction(animations[0]);\n      action.play();\n      console.log('Animation started');\n    }\n  }, [scene, animations]);\n  \n  useFrame((state, delta) => {\n    if (mixerRef.current) {\n      mixerRef.current.update(delta);\n    }\n  });\n  \n  return <primitive object={scene} scale={100} position={[0, -100, 0]} />;\n}\n\nexport default function SimpleAvatarAnimationTest() {\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <Canvas camera={{ position: [0, 100, 300], fov: 50 }}>\n        <ambientLight intensity={0.6} />\n        <directionalLight position={[10, 10, 5]} intensity={1} />\n        <AnimatedAvatar />\n        <OrbitControls />\n        <gridHelper args={[500, 50]} />\n      </Canvas>\n    </div>\n  );\n}\n\n// Preload models\nuseGLTF.preload('/avatars/AngelChick.glb');\nuseGLTF.preload('/animations/feminine/idle/F_Standing_Idle_001.glb');\n"],"names":["AnimatedAvatar","useRef","scene","useGLTF","animations","mixerRef","useEffect","length","console","log","mixer","THREE","current","clipAction","play","useFrame","state","delta","update","_jsx","object","scale","position","SimpleAvatarAnimationTest","style","width","height","children","_jsxs","Canvas","camera","fov","intensity","OrbitControls","args","preload"],"sourceRoot":""}