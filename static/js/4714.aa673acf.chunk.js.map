{"version":3,"file":"static/js/4714.aa673acf.chunk.js","mappings":"8HACA,SAAiB,C,wFCYjB,MAAMA,EAAyC,CAC7CC,IAAK,UACLC,WAAY,UACZC,YAAa,UACbC,SAAU,UACVC,SAAU,UACVC,UAAW,UACXC,KAAM,UACNC,QAAS,UACTC,MAAO,UACPC,QAAS,UACTC,SAAU,UACVC,eAAgB,UAChBC,QAAS,WAGLC,EAAyC,CAC7Cb,IAAK,eACLC,WAAY,eACZC,YAAa,eACbC,SAAU,eACVC,SAAU,eACVC,UAAW,eACXC,KAAM,eACNC,QAAS,eACTC,MAAO,eACPC,QAAS,eACTC,SAAU,eACVC,eAAgB,eAChBC,QAAS,gBAGEE,EAAgDC,IAAoC,IAAnC,SAAEC,EAAQ,gBAAEC,GAAiBF,EAEzF,MAAMG,EAAcF,EACjBG,MAAK,CAACC,EAAGC,IAAMA,EAAEC,MAAQF,EAAEE,QAC3BC,MAAM,EAAG,GAENC,EAAkBN,EAAY,GAEpC,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAKV,EAAgB,iBACpBO,IACCC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,mBAAkBC,SAAA,CAC/Bd,EAAeW,EAAgBI,UAAY,eAAK,IAAEJ,EAAgBI,eAKzEC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,eAAcC,SAC1BT,EAAYY,KAAI,CAACF,EAASG,KACzBN,EAAAA,EAAAA,MAAA,OAA2BC,UAAU,wBAAuBC,SAAA,EAC1DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BE,EAAAA,EAAAA,KAAA,QAAMH,UAAU,gBAAeC,SAC5Bd,EAAee,EAAQA,UAAY,kBAEtCC,EAAAA,EAAAA,KAAA,QAAMH,UAAU,eAAcC,SAAEC,EAAQA,cAE1CC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,sBAAqBC,UAClCE,EAAAA,EAAAA,KAAA,OACEH,UAAU,cACVM,MAAO,CACLC,MAAM,GAADC,OAAqB,IAAhBN,EAAQN,MAAW,KAC7Ba,gBAAiBpC,EAAe6B,EAAQA,UAAY,UACpDQ,eAAe,GAADF,OAAa,IAARH,EAAW,YAIpCN,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,CAAEU,KAAKC,MAAsB,IAAhBV,EAAQN,OAAa,SAjBzDM,EAAQA,cAsBtBC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,MAAA,OAAKc,QAAQ,cAAcb,UAAU,cAAaC,SAAA,EAChDE,EAAAA,EAAAA,KAAA,UAAQW,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKC,KAAK,OAAOC,OAAO,OAAOC,YAAY,IAAIC,QAAQ,SACnFjB,EAAAA,EAAAA,KAAA,UAAQW,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKC,KAAK,OAAOC,OAAO,OAAOC,YAAY,IAAIC,QAAQ,SACnFjB,EAAAA,EAAAA,KAAA,UAAQW,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKC,KAAK,OAAOC,OAAO,OAAOC,YAAY,IAAIC,QAAQ,QAElF9B,EAASO,MAAM,EAAG,GAAGO,KAAI,CAACF,EAASG,KAClC,MAAMgB,GAAiB,GAARhB,EAAa,KAAOM,KAAKW,GAAK,KACvCC,EAAyB,GAAhBrB,EAAQN,MACjB4B,EAAI,IAAMD,EAASZ,KAAKc,IAAIJ,GAC5BK,EAAI,IAAMH,EAASZ,KAAKgB,IAAIN,GAElC,OACEtB,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACEE,EAAAA,EAAAA,KAAA,QACEyB,GAAG,MACHC,GAAG,MACHC,GAAI,IAAM,GAAKnB,KAAKc,IAAIJ,GACxBU,GAAI,IAAM,GAAKpB,KAAKgB,IAAIN,GACxBH,OAAO,OACPC,YAAY,IACZC,QAAQ,SAEVjB,EAAAA,EAAAA,KAAA,UACEW,GAAIU,EACJT,GAAIW,EACJV,EAAE,IACFC,KAAM5C,EAAe6B,EAAQA,UAAY,UACzCF,UAAU,iBAEZG,EAAAA,EAAAA,KAAA,QACEqB,EAAG,IAAM,GAAKb,KAAKc,IAAIJ,GACvBK,EAAG,IAAM,GAAKf,KAAKgB,IAAIN,GACvBW,WAAW,SACXC,kBAAkB,SAClBjC,UAAU,sBACVkC,SAAS,KAAIjC,SAEZd,EAAee,EAAQA,UAAY,mBAzBhCA,EAAQA,oB","sources":["webpack://hub/./src/components/EmotionDisplay.css?d80d","components/EmotionDisplay.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React from 'react';\nimport './EmotionDisplay.css';\n\ninterface EmotionData {\n  emotion: string;\n  score: number;\n}\n\ninterface EmotionDisplayProps {\n  emotions: EmotionData[];\n  participantName: string;\n}\n\nconst EMOTION_COLORS: Record<string, string> = {\n  joy: '#FFD700',\n  excitement: '#FF6B6B',\n  contentment: '#4ECDC4',\n  interest: '#A8E6CF',\n  surprise: '#FFE66D',\n  confusion: '#B4A7D6',\n  fear: '#D7BDE2',\n  sadness: '#85C1E2',\n  anger: '#F1948A',\n  disgust: '#ABEBC6',\n  contempt: '#F8C471',\n  disappointment: '#AED6F1',\n  neutral: '#BDC3C7'\n};\n\nconst EMOTION_EMOJIS: Record<string, string> = {\n  joy: 'üòä',\n  excitement: 'ü§©',\n  contentment: 'üòå',\n  interest: 'ü§î',\n  surprise: 'üòÆ',\n  confusion: 'üòï',\n  fear: 'üò®',\n  sadness: 'üò¢',\n  anger: 'üò†',\n  disgust: 'ü§¢',\n  contempt: 'üòí',\n  disappointment: 'üòû',\n  neutral: 'üòê'\n};\n\nexport const EmotionDisplay: React.FC<EmotionDisplayProps> = ({ emotions, participantName }) => {\n  // Sort emotions by score and take top 3\n  const topEmotions = emotions\n    .sort((a, b) => b.score - a.score)\n    .slice(0, 3);\n\n  const dominantEmotion = topEmotions[0];\n\n  return (\n    <div className=\"emotion-display\">\n      <div className=\"emotion-header\">\n        <h4>{participantName}'s Emotions</h4>\n        {dominantEmotion && (\n          <span className=\"dominant-emotion\">\n            {EMOTION_EMOJIS[dominantEmotion.emotion] || 'üòê'} {dominantEmotion.emotion}\n          </span>\n        )}\n      </div>\n      \n      <div className=\"emotion-bars\">\n        {topEmotions.map((emotion, index) => (\n          <div key={emotion.emotion} className=\"emotion-bar-container\">\n            <div className=\"emotion-label\">\n              <span className=\"emotion-emoji\">\n                {EMOTION_EMOJIS[emotion.emotion] || 'üòê'}\n              </span>\n              <span className=\"emotion-name\">{emotion.emotion}</span>\n            </div>\n            <div className=\"emotion-bar-wrapper\">\n              <div\n                className=\"emotion-bar\"\n                style={{\n                  width: `${emotion.score * 100}%`,\n                  backgroundColor: EMOTION_COLORS[emotion.emotion] || '#BDC3C7',\n                  animationDelay: `${index * 100}ms`\n                }}\n              />\n            </div>\n            <span className=\"emotion-score\">{Math.round(emotion.score * 100)}%</span>\n          </div>\n        ))}\n      </div>\n\n      <div className=\"emotion-radar\">\n        <svg viewBox=\"0 0 200 200\" className=\"emotion-svg\">\n          <circle cx=\"100\" cy=\"100\" r=\"80\" fill=\"none\" stroke=\"#333\" strokeWidth=\"1\" opacity=\"0.3\" />\n          <circle cx=\"100\" cy=\"100\" r=\"60\" fill=\"none\" stroke=\"#333\" strokeWidth=\"1\" opacity=\"0.2\" />\n          <circle cx=\"100\" cy=\"100\" r=\"40\" fill=\"none\" stroke=\"#333\" strokeWidth=\"1\" opacity=\"0.1\" />\n          \n          {emotions.slice(0, 6).map((emotion, index) => {\n            const angle = (index * 60 - 90) * (Math.PI / 180);\n            const radius = emotion.score * 80;\n            const x = 100 + radius * Math.cos(angle);\n            const y = 100 + radius * Math.sin(angle);\n            \n            return (\n              <g key={emotion.emotion}>\n                <line\n                  x1=\"100\"\n                  y1=\"100\"\n                  x2={100 + 80 * Math.cos(angle)}\n                  y2={100 + 80 * Math.sin(angle)}\n                  stroke=\"#333\"\n                  strokeWidth=\"1\"\n                  opacity=\"0.2\"\n                />\n                <circle\n                  cx={x}\n                  cy={y}\n                  r=\"4\"\n                  fill={EMOTION_COLORS[emotion.emotion] || '#BDC3C7'}\n                  className=\"emotion-dot\"\n                />\n                <text\n                  x={100 + 90 * Math.cos(angle)}\n                  y={100 + 90 * Math.sin(angle)}\n                  textAnchor=\"middle\"\n                  alignmentBaseline=\"middle\"\n                  className=\"emotion-radar-label\"\n                  fontSize=\"10\"\n                >\n                  {EMOTION_EMOJIS[emotion.emotion] || 'üòê'}\n                </text>\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n    </div>\n  );\n};\n"],"names":["EMOTION_COLORS","joy","excitement","contentment","interest","surprise","confusion","fear","sadness","anger","disgust","contempt","disappointment","neutral","EMOTION_EMOJIS","EmotionDisplay","_ref","emotions","participantName","topEmotions","sort","a","b","score","slice","dominantEmotion","_jsxs","className","children","emotion","_jsx","map","index","style","width","concat","backgroundColor","animationDelay","Math","round","viewBox","cx","cy","r","fill","stroke","strokeWidth","opacity","angle","PI","radius","x","cos","y","sin","x1","y1","x2","y2","textAnchor","alignmentBaseline","fontSize"],"sourceRoot":""}