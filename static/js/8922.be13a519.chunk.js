"use strict";(self.webpackChunkhub=self.webpackChunkhub||[]).push([[8922],{28922:(r,e,t)=>{t.r(e),t.d(e,{default:()=>c});var n=t(9950),o=t(69104),l=t(12880),i=t(13437),u=t(44414);const c=r=>{let{avatarUrl:e,trackingData:t,postureData:c,position:s=[0,0,0],scale:a=1}=r;const h=(0,n.useRef)(null),{scene:d}=(0,o.p)(e),m=(0,n.useMemo)((()=>d.clone()),[d]),f=(0,n.useRef)(null),p=(0,n.useRef)(null),g=(0,n.useRef)(null),y=(0,n.useRef)(null),A=(0,n.useRef)(null),v=(0,n.useRef)(null),F=(0,n.useRef)(null),w=(0,n.useRef)({}),b=(0,n.useRef)({}),x=(0,n.useRef)([]),M=(0,n.useRef)(0),S=(0,n.useRef)(!1),E=(0,n.useRef)({}),[B]=(0,n.useState)(!0),I=(0,n.useRef)(!1),P=(0,n.useRef)(0),z={leftArm:(new i.Quaternion).setFromEuler(new i.Euler(0,0,-Math.PI/4)),rightArm:(new i.Quaternion).setFromEuler(new i.Euler(0,0,Math.PI/4)),leftForeArm:new i.Euler(0,0,-Math.PI/8),rightForeArm:new i.Euler(0,0,Math.PI/8)};return(0,n.useEffect)((()=>{var r,e,t,n,o;if(!m)return;const l=[];if(m.traverse((r=>{if(r instanceof i.Bone){const e=r.name.toLowerCase();console.log("[FullBodyAvatar] Found bone:",r.name),e.includes("head")&&!e.includes("headtop")&&(f.current=r),(e.includes("leftshoulder")||e.includes("shoulder_l"))&&(p.current=r),(e.includes("rightshoulder")||e.includes("shoulder_r"))&&(g.current=r),(e.includes("leftarm")||e.includes("arm_l")||e.includes("leftupperarm")||e.includes("upperarm_l"))&&!e.includes("fore")&&(y.current=r,w.current.leftArm=r.quaternion.clone(),b.current.leftArm=r.rotation.clone()),(e.includes("rightarm")||e.includes("arm_r")||e.includes("rightupperarm")||e.includes("upperarm_r"))&&!e.includes("fore")&&(A.current=r,w.current.rightArm=r.quaternion.clone(),b.current.rightArm=r.rotation.clone()),(e.includes("leftforearm")||e.includes("forearm_l")||e.includes("leftlowerarm")||e.includes("lowerarm_l"))&&(v.current=r,w.current.leftForeArm=r.quaternion.clone(),b.current.leftForeArm=r.rotation.clone()),(e.includes("rightforearm")||e.includes("forearm_r")||e.includes("rightlowerarm")||e.includes("lowerarm_r"))&&(F.current=r,w.current.rightForeArm=r.quaternion.clone(),b.current.rightForeArm=r.rotation.clone())}r instanceof i.SkinnedMesh&&r.morphTargetDictionary&&l.push(r)})),x.current=l,console.log("[FullBodyAvatar] Bone mapping complete:",{head:!!f.current,leftShoulder:!!p.current,rightShoulder:!!g.current,leftArm:!!y.current,rightArm:!!A.current,leftForeArm:!!v.current,rightForeArm:!!F.current,morphTargetMeshes:l.length}),console.log("[FullBodyAvatar] Bones found:",{head:null===(r=f.current)||void 0===r?void 0:r.name,leftArm:null===(e=y.current)||void 0===e?void 0:e.name,rightArm:null===(t=A.current)||void 0===t?void 0:t.name,leftForeArm:null===(n=v.current)||void 0===n?void 0:n.name,rightForeArm:null===(o=F.current)||void 0===o?void 0:o.name}),console.log("[FullBodyAvatar] Initial rotations:",{leftArm:w.current.leftArm?{quaternion:w.current.leftArm.toArray().map((r=>r.toFixed(3))),euler:b.current.leftArm?[(180*b.current.leftArm.x/Math.PI).toFixed(1),(180*b.current.leftArm.y/Math.PI).toFixed(1),(180*b.current.leftArm.z/Math.PI).toFixed(1)]:null}:null,rightArm:w.current.rightArm?{quaternion:w.current.rightArm.toArray().map((r=>r.toFixed(3))),euler:b.current.rightArm?[(180*b.current.rightArm.x/Math.PI).toFixed(1),(180*b.current.rightArm.y/Math.PI).toFixed(1),(180*b.current.rightArm.z/Math.PI).toFixed(1)]:null}:null}),!S.current){var u,c,s,a,h,d,M;console.log("[FullBodyAvatar] Bone search results:",{head:(null===(u=f.current)||void 0===u?void 0:u.name)||"NOT FOUND",leftShoulder:(null===(c=p.current)||void 0===c?void 0:c.name)||"NOT FOUND",rightShoulder:(null===(s=g.current)||void 0===s?void 0:s.name)||"NOT FOUND",leftArm:(null===(a=y.current)||void 0===a?void 0:a.name)||"NOT FOUND",rightArm:(null===(h=A.current)||void 0===h?void 0:h.name)||"NOT FOUND",leftForeArm:(null===(d=v.current)||void 0===d?void 0:d.name)||"NOT FOUND",rightForeArm:(null===(M=F.current)||void 0===M?void 0:M.name)||"NOT FOUND"});const r=[];m.traverse((e=>{e instanceof i.Bone&&r.push(e.name)})),console.log("[FullBodyAvatar] All bones in model:",r),S.current=!0}if(B){const r=new i.SphereGeometry(.05,16,16),e={shoulder:new i.MeshBasicMaterial({color:16711680}),elbow:new i.MeshBasicMaterial({color:65280}),wrist:new i.MeshBasicMaterial({color:255})};["leftShoulder","leftElbow","leftWrist","rightShoulder","rightElbow","rightWrist"].forEach((t=>{const n=t.includes("Shoulder")?e.shoulder:t.includes("Elbow")?e.elbow:e.wrist,o=new i.Mesh(r,n);o.visible=!1,m.add(o),E.current[t]=o}))}}),[m,B]),(0,l.F)(((r,e)=>{var n;if(!h.current)return;if(M.current++,M.current%60===0&&(c&&(console.log("[FullBodyAvatar] PostureData from service:",c),console.log("[FullBodyAvatar] PostureData keypoints detail:",c.keypoints)),null!==t&&void 0!==t&&t.posture&&(console.log("[FullBodyAvatar] TrackingData posture:",t.posture),console.log("[FullBodyAvatar] TrackingData keypoints detail:",t.posture.keypoints))),null!==t&&void 0!==t&&t.headRotation&&f.current){const{pitch:r,yaw:e,roll:n}=t.headRotation;f.current.rotation.x=i.MathUtils.degToRad(.5*r),f.current.rotation.y=i.MathUtils.degToRad(.6*-e),f.current.rotation.z=i.MathUtils.degToRad(.3*-n)}const o=(null===c||void 0===c?void 0:c.keypoints)||(null===t||void 0===t||null===(n=t.posture)||void 0===n?void 0:n.keypoints);if(o){M.current%60===0&&console.log("[FullBodyAvatar] Using keypoints:",o);const r=640,e=480,t=o.leftShoulder,n=o.leftElbow,l=o.leftWrist;if(t&&t.confidence>.05){const o={x:t.x/r,y:t.y/e};if(l&&l.confidence>.05&&n&&n.confidence>.05){const t={x:l.x/r,y:l.y/e},u={x:n.x/r,y:n.y/e};M.current%60===0&&console.log("[FullBodyAvatar] Left arm normalized coords:",{wrist:t,elbow:u,shoulder:o});const c=new i.Vector3(2*(o.x-.5),2*-(o.y-.5),0),s=new i.Vector3(2*(u.x-.5),2*-(u.y-.5),.2),a=new i.Vector3(2*(t.x-.5),2*-(t.y-.5),.3);if(E.current&&(E.current.leftShoulder&&(E.current.leftShoulder.position.copy(c),E.current.leftShoulder.position.multiplyScalar(50),E.current.leftShoulder.visible=!0),E.current.leftElbow&&(E.current.leftElbow.position.copy(s),E.current.leftElbow.position.multiplyScalar(50),E.current.leftElbow.visible=!0),E.current.leftWrist&&(E.current.leftWrist.position.copy(a),E.current.leftWrist.position.multiplyScalar(50),E.current.leftWrist.visible=!0)),y.current){const r=s.clone().sub(c).normalize(),e=new i.Quaternion,t=new i.Vector3(-1,0,0);e.setFromUnitVectors(t,r);const n=w.current.leftArm?w.current.leftArm.clone().multiply(e):e;y.current.quaternion.slerp(n,.3)}if(v.current&&y.current){const r=s.clone().sub(c),e=a.clone().sub(s),t=r.angleTo(e),n=Math.PI-t;b.current.leftForeArm&&v.current.rotation.copy(b.current.leftForeArm),v.current.rotation.z-=Math.min(.8*n,.8*Math.PI),M.current%60===0&&console.log("[FullBodyAvatar] Left arm IK:",{angle:(180*t/Math.PI).toFixed(1),bendAngle:(180*n/Math.PI).toFixed(1),appliedBend:(180*v.current.rotation.z/Math.PI).toFixed(1)})}}else if(l&&l.confidence>.05&&y.current){const t={x:l.x/r,y:l.y/e},n=new i.Vector3(2*(o.x-.5),2*-(o.y-.5),0),u=new i.Vector3(2*(t.x-.5),2*-(t.y-.5),.4);E.current&&(E.current.leftShoulder&&(E.current.leftShoulder.position.copy(n),E.current.leftShoulder.position.multiplyScalar(50),E.current.leftShoulder.visible=!0),E.current.leftWrist&&(E.current.leftWrist.position.copy(u),E.current.leftWrist.position.multiplyScalar(50),E.current.leftWrist.visible=!0),E.current.leftElbow&&(E.current.leftElbow.visible=!1));const c=u.clone().sub(n).normalize(),s=new i.Quaternion,a=new i.Vector3(-1,0,0);s.setFromUnitVectors(a,c);const h=w.current.leftArm?w.current.leftArm.clone().multiply(s):s;y.current.quaternion.slerp(h,.2),M.current%60===0&&console.log("[FullBodyAvatar] Left arm (shoulder-wrist only):",{shoulderPos:n.toArray().map((r=>r.toFixed(2))),wristPos:u.toArray().map((r=>r.toFixed(2))),armDir:c.toArray().map((r=>r.toFixed(2)))})}else if(y.current){const r=w.current.leftArm||new i.Quaternion;if(y.current.quaternion.slerp(r,.05),v.current&&b.current.leftForeArm){const r=v.current.rotation.clone(),e=b.current.leftForeArm;v.current.rotation.x=i.MathUtils.lerp(r.x,e.x,.05),v.current.rotation.y=i.MathUtils.lerp(r.y,e.y,.05),v.current.rotation.z=i.MathUtils.lerp(r.z,e.z,.05)}E.current&&(E.current.leftShoulder&&(E.current.leftShoulder.visible=!1),E.current.leftElbow&&(E.current.leftElbow.visible=!1),E.current.leftWrist&&(E.current.leftWrist.visible=!1))}}if(c&&c.keypoints.rightShoulder){const r=c.keypoints.rightShoulder,e=c.keypoints.rightElbow,t=c.keypoints.rightWrist;if(r.confidence>.05){const n={x:r.x/640,y:r.y/480};if(t&&t.confidence>.05&&e&&e.confidence>.05){const r={x:t.x/640,y:t.y/480},o={x:e.x/640,y:e.y/480};if(M.current%60===0&&console.log("[FullBodyAvatar] Right arm normalized coords:",{wrist:r,elbow:o,shoulder:n}),A.current){const e=new i.Vector3(2*(n.x-.5),2*-(n.y-.5),0),t=new i.Vector3(2*(o.x-.5),2*-(o.y-.5),.2),l=new i.Vector3(2*(r.x-.5),2*-(r.y-.5),.3);E.current&&(E.current.rightShoulder&&(E.current.rightShoulder.position.copy(e),E.current.rightShoulder.position.multiplyScalar(50),E.current.rightShoulder.visible=!0),E.current.rightElbow&&(E.current.rightElbow.position.copy(t),E.current.rightElbow.position.multiplyScalar(50),E.current.rightElbow.visible=!0),E.current.rightWrist&&(E.current.rightWrist.position.copy(l),E.current.rightWrist.position.multiplyScalar(50),E.current.rightWrist.visible=!0));const u=t.clone().sub(e).normalize(),c=new i.Quaternion,s=new i.Vector3(1,0,0);c.setFromUnitVectors(s,u);const a=w.current.rightArm?w.current.rightArm.clone().multiply(c):c;if(A.current.quaternion.slerp(a,.3),F.current){const r=t.clone().sub(e),n=l.clone().sub(t),o=r.angleTo(n),i=Math.PI-o;b.current.rightForeArm&&F.current.rotation.copy(b.current.rightForeArm),F.current.rotation.z+=Math.min(.8*i,.8*Math.PI),M.current%60===0&&console.log("[FullBodyAvatar] Right arm IK:",{angle:(180*o/Math.PI).toFixed(1),bendAngle:(180*i/Math.PI).toFixed(1),appliedBend:(180*F.current.rotation.z/Math.PI).toFixed(1)})}}}else if(t&&t.confidence>.05&&A.current){const r={x:t.x/640,y:t.y/480},e=new i.Vector3(2*(n.x-.5),2*-(n.y-.5),0),o=new i.Vector3(2*(r.x-.5),2*-(r.y-.5),.4);E.current&&(E.current.rightShoulder&&(E.current.rightShoulder.position.copy(e),E.current.rightShoulder.position.multiplyScalar(50),E.current.rightShoulder.visible=!0),E.current.rightWrist&&(E.current.rightWrist.position.copy(o),E.current.rightWrist.position.multiplyScalar(50),E.current.rightWrist.visible=!0),E.current.rightElbow&&(E.current.rightElbow.visible=!1));const l=o.clone().sub(e).normalize(),u=new i.Quaternion,c=new i.Vector3(1,0,0);u.setFromUnitVectors(c,l);const s=w.current.rightArm?w.current.rightArm.clone().multiply(u):u;A.current.quaternion.slerp(s,.2),M.current%60===0&&console.log("[FullBodyAvatar] Right arm (shoulder-wrist only):",{shoulderPos:e.toArray().map((r=>r.toFixed(2))),wristPos:o.toArray().map((r=>r.toFixed(2))),armDir:l.toArray().map((r=>r.toFixed(2)))})}else if(A.current){const r=w.current.rightArm||new i.Quaternion;if(A.current.quaternion.slerp(r,.05),F.current&&b.current.rightForeArm){const r=F.current.rotation.clone(),e=b.current.rightForeArm;F.current.rotation.x=i.MathUtils.lerp(r.x,e.x,.05),F.current.rotation.y=i.MathUtils.lerp(r.y,e.y,.05),F.current.rotation.z=i.MathUtils.lerp(r.z,e.z,.05)}E.current&&(E.current.rightShoulder&&(E.current.rightShoulder.visible=!1),E.current.rightElbow&&(E.current.rightElbow.visible=!1),E.current.rightWrist&&(E.current.rightWrist.visible=!1))}}}}else M.current%60===0&&console.log("[FullBodyAvatar] No keypoints available");if(null!==t&&void 0!==t&&t.expressions&&x.current.length>0){const r=t.expressions;x.current.forEach((e=>{e.morphTargetDictionary&&e.morphTargetInfluences&&Object.entries(r).forEach((r=>{let[t,n]=r;const o=e.morphTargetDictionary[t];void 0!==o&&e.morphTargetInfluences&&(e.morphTargetInfluences[o]=1.5*n)}))}))}I.current||(P.current+=e,P.current>2&&(I.current=!0)),I.current&&(y.current&&y.current.quaternion.slerp(z.leftArm,.05),A.current&&A.current.quaternion.slerp(z.rightArm,.05),v.current&&(v.current.rotation.z=i.MathUtils.lerp(v.current.rotation.z,z.leftForeArm.z,.05)),F.current&&(F.current.rotation.z=i.MathUtils.lerp(F.current.rotation.z,z.rightForeArm.z,.05)))})),(0,u.jsx)("group",{ref:h,position:s,scale:a,children:(0,u.jsx)("primitive",{object:m})})}}}]);