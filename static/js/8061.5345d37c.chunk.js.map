{"version":3,"file":"static/js/8061.5345d37c.chunk.js","mappings":"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","sources":["webpack://hub/./src/components/AnalyticsVisualization.css?e1d4","components/AnalyticsVisualization.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useRef, useEffect, useState } from 'react';\nimport * as d3 from 'd3';\nimport { Eye, Heart, Brain, TrendingUp, Activity } from 'lucide-react';\nimport './AnalyticsVisualization.css';\n\ninterface TimelineData {\n  timestamp: number;\n  userEmotions: { name: string; score: number; color: string }[];\n  partnerEmotions: { name: string; score: number; color: string }[];\n  userEngagement: number;\n  partnerEngagement: number;\n  userEyeContact: boolean;\n  partnerEyeContact: boolean;\n  userPosture: number;\n  partnerPosture: number;\n  transcript?: {\n    speaker: 'user' | 'partner';\n    text: string;\n  };\n}\n\ninterface AnalyticsVisualizationProps {\n  data: TimelineData[];\n  duration: number;\n}\n\nexport const AnalyticsVisualization: React.FC<AnalyticsVisualizationProps> = ({ data, duration }) => {\n  const svgRef = useRef<SVGSVGElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [selectedPoint, setSelectedPoint] = useState<TimelineData | null>(null);\n  const [hoveredMetric, setHoveredMetric] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!svgRef.current || !containerRef.current || data.length === 0) return;\n\n    const container = containerRef.current;\n    const margin = { top: 40, right: 60, bottom: 60, left: 60 };\n    const width = container.clientWidth - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Clear previous content\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    const svg = d3.select(svgRef.current)\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n    const g = svg.append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Scales\n    const xScale = d3.scaleLinear()\n      .domain([0, duration])\n      .range([0, width]);\n\n    const yScale = d3.scaleLinear()\n      .domain([0, 1])\n      .range([height, 0]);\n\n    // Create gradients for each emotion\n    const defs = svg.append('defs');\n    \n    const emotionColors = [\n      { name: 'joy', color: '#FFD700' },\n      { name: 'excitement', color: '#FF6B6B' },\n      { name: 'interest', color: '#4ECDC4' },\n      { name: 'love', color: '#FF69B4' },\n      { name: 'sadness', color: '#6C8EBF' },\n      { name: 'confusion', color: '#B39BC8' }\n    ];\n\n    emotionColors.forEach(emotion => {\n      const gradient = defs.append('linearGradient')\n        .attr('id', `gradient-${emotion.name}`)\n        .attr('x1', '0%')\n        .attr('y1', '0%')\n        .attr('x2', '0%')\n        .attr('y2', '100%');\n\n      gradient.append('stop')\n        .attr('offset', '0%')\n        .attr('stop-color', emotion.color)\n        .attr('stop-opacity', 0.8);\n\n      gradient.append('stop')\n        .attr('offset', '100%')\n        .attr('stop-color', emotion.color)\n        .attr('stop-opacity', 0.1);\n    });\n\n    // Add grid lines\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', `translate(0,${height})`)\n      .call(d3.axisBottom(xScale)\n        .tickSize(-height)\n        .tickFormat(() => '')\n        .ticks(10))\n      .style('stroke-dasharray', '3,3')\n      .style('opacity', 0.3);\n\n    g.append('g')\n      .attr('class', 'grid')\n      .call(d3.axisLeft(yScale)\n        .tickSize(-width)\n        .tickFormat(() => '')\n        .ticks(5))\n      .style('stroke-dasharray', '3,3')\n      .style('opacity', 0.3);\n\n    // Axes\n    g.append('g')\n      .attr('transform', `translate(0,${height})`)\n      .call(d3.axisBottom(xScale)\n        .tickFormat((d, i) => `${Math.floor(+d / 60000)}:${String(Math.floor((+d % 60000) / 1000)).padStart(2, '0')}`))\n      .attr('class', 'x-axis');\n\n    g.append('g')\n      .call(d3.axisLeft(yScale)\n        .tickFormat((d, i) => `${(+d * 100).toFixed(0)}%`))\n      .attr('class', 'y-axis');\n\n    // Create lines for different metrics\n    const metricsToPlot = [\n      { key: 'userEngagement', name: 'Your Engagement', color: '#7C3AED', strokeWidth: 3 },\n      { key: 'partnerEngagement', name: 'Partner Engagement', color: '#EC4899', strokeWidth: 3 },\n      { key: 'userPosture', name: 'Your Posture', color: '#10B981', strokeWidth: 2, dashArray: '5,5' },\n      { key: 'partnerPosture', name: 'Partner Posture', color: '#F59E0B', strokeWidth: 2, dashArray: '5,5' }\n    ];\n\n    metricsToPlot.forEach(metric => {\n      const line = d3.line<TimelineData>()\n        .x(d => xScale(d.timestamp))\n        .y(d => yScale(d[metric.key as keyof TimelineData] as number))\n        .curve(d3.curveMonotoneX);\n\n      const path = g.append('path')\n        .datum(data)\n        .attr('fill', 'none')\n        .attr('stroke', metric.color)\n        .attr('stroke-width', metric.strokeWidth)\n        .attr('class', `metric-line ${metric.key}`)\n        .attr('d', line);\n\n      if (metric.dashArray) {\n        path.attr('stroke-dasharray', metric.dashArray);\n      }\n\n      // Animate the line drawing\n      const totalLength = path.node()?.getTotalLength() || 0;\n      path\n        .attr('stroke-dasharray', `${totalLength} ${totalLength}`)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .duration(2000)\n        .attr('stroke-dashoffset', 0);\n    });\n\n    // Add eye contact indicators\n    const eyeContactData = data.map(d => ({\n      timestamp: d.timestamp,\n      userContact: d.userEyeContact ? 0.05 : 0,\n      partnerContact: d.partnerEyeContact ? 0.05 : 0\n    }));\n\n    g.selectAll('.eye-contact-user')\n      .data(eyeContactData.filter(d => d.userContact > 0))\n      .enter()\n      .append('rect')\n      .attr('x', d => xScale(d.timestamp) - 1)\n      .attr('y', height - 10)\n      .attr('width', 2)\n      .attr('height', 10)\n      .attr('fill', '#7C3AED')\n      .attr('opacity', 0.5);\n\n    g.selectAll('.eye-contact-partner')\n      .data(eyeContactData.filter(d => d.partnerContact > 0))\n      .enter()\n      .append('rect')\n      .attr('x', d => xScale(d.timestamp) - 1)\n      .attr('y', height)\n      .attr('width', 2)\n      .attr('height', 10)\n      .attr('fill', '#EC4899')\n      .attr('opacity', 0.5);\n\n    // Add emotion areas\n    const emotionArea = d3.area<TimelineData>()\n      .x(d => xScale(d.timestamp))\n      .y0(height)\n      .y1(d => yScale(d.userEmotions[0]?.score || 0))\n      .curve(d3.curveMonotoneX);\n\n    data.forEach((d, i) => {\n      if (d.userEmotions[0]) {\n        g.append('path')\n          .datum([d])\n          .attr('fill', `url(#gradient-${d.userEmotions[0].name})`)\n          .attr('opacity', 0.3)\n          .attr('d', emotionArea);\n      }\n    });\n\n    // Add interactive overlay\n    const focus = g.append('g')\n      .attr('class', 'focus')\n      .style('display', 'none');\n\n    focus.append('line')\n      .attr('class', 'focus-line')\n      .attr('y1', 0)\n      .attr('y2', height)\n      .style('stroke', '#666')\n      .style('stroke-dasharray', '3,3');\n\n    focus.append('circle')\n      .attr('r', 5)\n      .style('fill', '#7C3AED');\n\n    const tooltip = d3.select('body').append('div')\n      .attr('class', 'analytics-tooltip')\n      .style('opacity', 0);\n\n    svg.append('rect')\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n      .attr('width', width)\n      .attr('height', height)\n      .style('fill', 'none')\n      .style('pointer-events', 'all')\n      .on('mouseover', () => focus.style('display', null))\n      .on('mouseout', () => {\n        focus.style('display', 'none');\n        tooltip.style('opacity', 0);\n      })\n      .on('mousemove', function(event) {\n        const x0 = xScale.invert(d3.pointer(event, this)[0]);\n        const bisect = d3.bisector<TimelineData, number>(d => d.timestamp).left;\n        const i = bisect(data, x0, 1);\n        const d0 = data[i - 1];\n        const d1 = data[i];\n        const d = x0 - d0.timestamp > d1.timestamp - x0 ? d1 : d0;\n        \n        focus.attr('transform', `translate(${xScale(d.timestamp)},${yScale(d.userEngagement)})`);\n        focus.select('.focus-line')\n          .attr('transform', `translate(0,${-yScale(d.userEngagement)})`);\n        \n        tooltip.transition()\n          .duration(200)\n          .style('opacity', .9);\n        \n        tooltip.html(`\n          <div class=\"tooltip-header\">\n            ${new Date(d.timestamp).toLocaleTimeString()}\n          </div>\n          <div class=\"tooltip-content\">\n            <div class=\"tooltip-row\">\n              <span class=\"tooltip-label\">Your Engagement:</span>\n              <span class=\"tooltip-value\">${(d.userEngagement * 100).toFixed(0)}%</span>\n            </div>\n            <div class=\"tooltip-row\">\n              <span class=\"tooltip-label\">Partner Engagement:</span>\n              <span class=\"tooltip-value\">${(d.partnerEngagement * 100).toFixed(0)}%</span>\n            </div>\n            ${d.userEmotions[0] ? `\n              <div class=\"tooltip-row\">\n                <span class=\"tooltip-label\">Your Emotion:</span>\n                <span class=\"tooltip-value\">${d.userEmotions[0].name}</span>\n              </div>\n            ` : ''}\n            ${d.transcript ? `\n              <div class=\"tooltip-transcript\">\n                <strong>${d.transcript.speaker}:</strong> \"${d.transcript.text}\"\n              </div>\n            ` : ''}\n          </div>\n        `)\n          .style('left', (event.pageX + 10) + 'px')\n          .style('top', (event.pageY - 28) + 'px');\n        \n        setSelectedPoint(d);\n      });\n\n    // Add legend\n    const legend = svg.append('g')\n      .attr('transform', `translate(${width - 150}, 20)`);\n\n    metricsToPlot.forEach((metric, i) => {\n      const legendRow = legend.append('g')\n        .attr('transform', `translate(0, ${i * 20})`);\n\n      legendRow.append('line')\n        .attr('x1', 0)\n        .attr('x2', 20)\n        .attr('y1', 10)\n        .attr('y2', 10)\n        .attr('stroke', metric.color)\n        .attr('stroke-width', metric.strokeWidth)\n        .attr('stroke-dasharray', metric.dashArray || '');\n\n      legendRow.append('text')\n        .attr('x', 25)\n        .attr('y', 10)\n        .attr('dy', '0.32em')\n        .style('font-size', '12px')\n        .text(metric.name);\n    });\n\n    return () => {\n      tooltip.remove();\n    };\n  }, [data, duration]);\n\n  return (\n    <div className=\"analytics-visualization\">\n      <div className=\"visualization-header\">\n        <h3>Engagement & Emotion Timeline</h3>\n        <div className=\"metric-pills\">\n          <div \n            className={`metric-pill ${hoveredMetric === 'engagement' ? 'active' : ''}`}\n            onMouseEnter={() => setHoveredMetric('engagement')}\n            onMouseLeave={() => setHoveredMetric(null)}\n          >\n            <Brain size={16} />\n            <span>Engagement</span>\n          </div>\n          <div \n            className={`metric-pill ${hoveredMetric === 'emotion' ? 'active' : ''}`}\n            onMouseEnter={() => setHoveredMetric('emotion')}\n            onMouseLeave={() => setHoveredMetric(null)}\n          >\n            <Heart size={16} />\n            <span>Emotions</span>\n          </div>\n          <div \n            className={`metric-pill ${hoveredMetric === 'eyecontact' ? 'active' : ''}`}\n            onMouseEnter={() => setHoveredMetric('eyecontact')}\n            onMouseLeave={() => setHoveredMetric(null)}\n          >\n            <Eye size={16} />\n            <span>Eye Contact</span>\n          </div>\n          <div \n            className={`metric-pill ${hoveredMetric === 'posture' ? 'active' : ''}`}\n            onMouseEnter={() => setHoveredMetric('posture')}\n            onMouseLeave={() => setHoveredMetric(null)}\n          >\n            <Activity size={16} />\n            <span>Posture</span>\n          </div>\n        </div>\n      </div>\n      \n      <div ref={containerRef} className=\"visualization-container\">\n        <svg ref={svgRef}></svg>\n      </div>\n\n      {selectedPoint && (\n        <div className=\"point-details\">\n          <div className=\"detail-card\">\n            <h4>Detailed Metrics at {new Date(selectedPoint.timestamp).toLocaleTimeString()}</h4>\n            <div className=\"metrics-grid\">\n              <div className=\"metric-item\">\n                <Eye className={selectedPoint.userEyeContact ? 'active' : ''} />\n                <span>Your Eye Contact</span>\n              </div>\n              <div className=\"metric-item\">\n                <Eye className={selectedPoint.partnerEyeContact ? 'active' : ''} />\n                <span>Partner Eye Contact</span>\n              </div>\n              <div className=\"metric-item\">\n                <TrendingUp />\n                <span>Your Posture: {(selectedPoint.userPosture * 100).toFixed(0)}%</span>\n              </div>\n              <div className=\"metric-item\">\n                <TrendingUp />\n                <span>Partner Posture: {(selectedPoint.partnerPosture * 100).toFixed(0)}%</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Heatmap component for emotion patterns\nexport const EmotionHeatmap: React.FC<{ data: TimelineData[] }> = ({ data }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  useEffect(() => {\n    if (!canvasRef.current || data.length === 0) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.width;\n    const height = canvas.height;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Create emotion intensity map\n    const emotionTypes = ['joy', 'excitement', 'interest', 'love', 'sadness', 'confusion', 'fear', 'anger'];\n    const cellHeight = height / emotionTypes.length;\n    const cellWidth = width / data.length;\n\n    data.forEach((point, i) => {\n      emotionTypes.forEach((emotion, j) => {\n        const userScore = point.userEmotions.find(e => e.name === emotion)?.score || 0;\n        const partnerScore = point.partnerEmotions.find(e => e.name === emotion)?.score || 0;\n        const avgScore = (userScore + partnerScore) / 2;\n\n        // Create gradient based on score\n        const intensity = Math.floor(avgScore * 255);\n        ctx.fillStyle = `rgba(124, 58, 237, ${avgScore})`;\n        ctx.fillRect(i * cellWidth, j * cellHeight, cellWidth, cellHeight / 2);\n        \n        ctx.fillStyle = `rgba(236, 72, 153, ${avgScore})`;\n        ctx.fillRect(i * cellWidth, j * cellHeight + cellHeight / 2, cellWidth, cellHeight / 2);\n      });\n    });\n\n    // Add labels\n    ctx.fillStyle = '#374151';\n    ctx.font = '12px sans-serif';\n    emotionTypes.forEach((emotion, j) => {\n      ctx.fillText(emotion, 5, j * cellHeight + cellHeight / 2);\n    });\n\n  }, [data]);\n\n  return (\n    <div className=\"emotion-heatmap\">\n      <h3>Emotion Intensity Heatmap</h3>\n      <div className=\"heatmap-legend\">\n        <span>Low</span>\n        <div className=\"gradient-bar\"></div>\n        <span>High</span>\n      </div>\n      <canvas \n        ref={canvasRef} \n        width={800} \n        height={400}\n        className=\"heatmap-canvas\"\n      />\n    </div>\n  );\n};\n\nexport default AnalyticsVisualization;\n"],"names":["AnalyticsVisualization","_ref","data","duration","svgRef","useRef","containerRef","selectedPoint","setSelectedPoint","useState","hoveredMetric","setHoveredMetric","useEffect","current","length","margin","width","clientWidth","height","d3","selectAll","remove","svg","attr","g","append","concat","xScale","domain","range","yScale","defs","name","color","forEach","emotion","gradient","call","tickSize","tickFormat","ticks","style","d","i","Math","floor","String","padStart","toFixed","metricsToPlot","key","strokeWidth","dashArray","metric","_path$node","line","x","timestamp","y","curve","path","datum","totalLength","node","getTotalLength","transition","eyeContactData","map","userContact","userEyeContact","partnerContact","partnerEyeContact","filter","enter","emotionArea","y0","y1","_d$userEmotions$","userEmotions","score","focus","tooltip","on","event","x0","invert","this","bisect","left","d0","d1","userEngagement","select","html","Date","toLocaleTimeString","partnerEngagement","transcript","speaker","text","pageX","pageY","legend","legendRow","_jsxs","className","children","_jsx","onMouseEnter","onMouseLeave","Brain","size","Heart","Eye","Activity","ref","TrendingUp","userPosture","partnerPosture","EmotionHeatmap","_ref2","canvasRef","canvas","ctx","getContext","clearRect","emotionTypes","cellHeight","cellWidth","point","j","_point$userEmotions$f","_point$partnerEmotion","avgScore","find","e","partnerEmotions","fillStyle","fillRect","font","fillText"],"sourceRoot":""}