"use strict";(self.webpackChunkhub=self.webpackChunkhub||[]).push([[2187],{22187:(e,t,o)=>{o.r(t),o.d(t,{PresenceAvatar:()=>p,default:()=>f});var n=o(9950),r=o(13437),a=o(12880),i=o(69104),l=o(42092),s=o(34973),c=o(44414);const u={browInnerUp:{target:"browInnerUp",amplify:1.5},browDownLeft:{target:"browDownLeft",amplify:1.8},browDownRight:{target:"browDownRight",amplify:1.8},browOuterUpLeft:{target:"browOuterUpLeft",amplify:1.5},browOuterUpRight:{target:"browOuterUpRight",amplify:1.5},mouthSmileLeft:{target:"mouthSmileLeft",amplify:2.5},mouthSmileRight:{target:"mouthSmileRight",amplify:2.5},mouthFrownLeft:{target:"mouthFrownLeft",amplify:2.2},mouthFrownRight:{target:"mouthFrownRight",amplify:2.2},mouthOpen:{target:"mouthOpen",amplify:1},mouthPucker:{target:"mouthPucker",amplify:1.8},mouthLeft:{target:"mouthLeft",amplify:1.5},mouthRight:{target:"mouthRight",amplify:1.5},eyeSquintLeft:{target:"eyeSquintLeft",amplify:1.4},eyeSquintRight:{target:"eyeSquintRight",amplify:1.4},eyeWideLeft:{target:"eyeWideLeft",amplify:1.2},eyeWideRight:{target:"eyeWideRight",amplify:1.2},cheekPuff:{target:"cheekPuff",amplify:1.5},cheekSquintLeft:{target:"cheekSquintLeft",amplify:1.3},cheekSquintRight:{target:"cheekSquintRight",amplify:1.3},noseSneerLeft:{target:"noseSneerLeft",amplify:1.5},noseSneerRight:{target:"noseSneerRight",amplify:1.5},jawOpen:{target:"jawOpen",amplify:1},jawLeft:{target:"jawLeft",amplify:1.2},jawRight:{target:"jawRight",amplify:1.2}},h={mouthOpen:{targets:["jawOpen"],amplify:.8,debug:!0},mouthSmile:{targets:["mouthSmileLeft","mouthSmileRight"],amplify:7},mouthFrown:{targets:["mouthFrownLeft","mouthFrownRight"],amplify:7},mouthPucker:{targets:["mouthPucker"],amplify:1.8},browInnerUp:{targets:["browInnerUp"],amplify:1.5},browUpLeft:{targets:["browOuterUpLeft"],amplify:1.5},browUpRight:{targets:["browOuterUpRight"],amplify:1.5},eyebrowRaiseLeft:{targets:["browOuterUpLeft"],amplify:5},eyebrowRaiseRight:{targets:["browOuterUpRight"],amplify:5},eyebrowFurrow:{targets:["browDownLeft","browDownRight"],amplify:5},eyeSquintLeft:{targets:["eyeSquintLeft"],amplify:3},eyeSquintRight:{targets:["eyeSquintRight"],amplify:3},eyeWideLeft:{targets:["eyeWideLeft"],amplify:3},eyeWideRight:{targets:["eyeWideRight"],amplify:3},cheekPuff:{targets:["cheekPuff"],amplify:1.5},cheekSquintLeft:{targets:["cheekSquintLeft"],amplify:1.3},cheekSquintRight:{targets:["cheekSquintRight"],amplify:1.3},noseSneer:{targets:["noseSneerLeft","noseSneerRight"],amplify:1.5},jawLeft:{targets:["jawLeft"],amplify:1.2},jawRight:{targets:["jawRight"],amplify:1.2},mouthLeft:{targets:["mouthLeft"],amplify:1.5},mouthRight:{targets:["mouthRight"],amplify:1.5},mouthRollLower:{targets:["mouthRollLower"],amplify:1.5},mouthRollUpper:{targets:["mouthRollUpper"],amplify:1.5},mouthShrugLower:{targets:["mouthShrugLower"],amplify:1.5},mouthShrugUpper:{targets:["mouthShrugUpper"],amplify:1.5},mouthFunnel:{targets:["mouthFunnel"],amplify:1.5},mouthPress:{targets:["mouthPressLeft","mouthPressRight"],amplify:1.5},mouthLowerDown:{targets:["mouthLowerDownLeft","mouthLowerDownRight"],amplify:1.5},mouthUpperUp:{targets:["mouthUpperUpLeft","mouthUpperUpRight"],amplify:1.5},mouthPout:{targets:["mouthPucker"],amplify:1.8}};function m(e,t,o){return e+(t-e)*o}new r.Euler,new r.Quaternion,new r.Matrix4,new r.Matrix4,new r.Matrix4,new r.Matrix4,new r.Matrix4;const p=n.memo((e=>{let{avatarUrl:t,trackingData:o,position:p=[0,0,0],scale:f=1,participantId:g,animationName:d="idle",emotionalBlendshapes:y,audioData:v}=e;const w=void 0===o,R=w?"coach":"user",b=(0,n.useRef)(Math.random().toString(36).substr(2,9));(0,n.useEffect)((()=>(console.log("[PresenceAvatar-".concat(b.current,"] Mounted:"),{avatarType:R,participantId:g,hasTrackingData:!!o,avatarUrl:t,timestamp:Date.now()}),()=>{console.log("[PresenceAvatar-".concat(b.current,"] Unmounted"))})),[]),(0,n.useEffect)((()=>{w&&y&&Object.keys(y).length>0&&console.log("[PresenceAvatar-".concat(b.current,"] Emotional blendshapes:"),Object.keys(y).length),!w&&null!==o&&void 0!==o&&o.facialExpressions&&console.log("[PresenceAvatar-".concat(b.current,"] Tracking data expressions:"),Object.keys(o.facialExpressions).length)}),[y,o,w,R]);const k=(0,n.useRef)(null),L=(0,n.useRef)(null),T=(0,n.useRef)(null),D=(0,n.useRef)(null),P=(0,n.useRef)(null),M=((0,n.useRef)(null),(0,n.useRef)(null)),S=(0,n.useRef)(null),x=(0,n.useRef)(null),A=(0,n.useRef)(0),O=(0,n.useRef)(0),{scene:E}=((0,n.useRef)({}),(0,n.useRef)({}),(0,n.useRef)(!1),(0,i.p)(t||"/avatars/coach_grace.glb")),j=(0,n.useMemo)((()=>{if(!E)return null;return s.t.clone(E)}),[E]),U="/animations/M_Standing_Idle_Variations_001.glb",{animations:_}=(0,i.p)(U);i.p.preload(U);const I=(0,n.useMemo)((()=>["/animations/M_Talking_Variations_001.glb","/animations/M_Talking_Variations_002.glb","/animations/M_Talking_Variations_003.glb","/animations/M_Talking_Variations_004.glb","/animations/M_Talking_Variations_005.glb","/animations/M_Talking_Variations_006.glb"]),[]),{animations:F}=(0,i.p)(I[0]),{animations:q}=(0,i.p)(I[1]),{animations:N}=(0,i.p)(I[2]),{animations:C}=(0,i.p)(I[3]),{animations:z}=(0,i.p)(I[4]),{animations:W}=(0,i.p)(I[5]),V=(0,n.useMemo)((()=>[...F,...q,...N,...C,...z,...W]),[F,q,N,C,z,W]);I.forEach((e=>i.p.preload(e)));const B=(0,n.useMemo)((()=>[..._,...V]),[_,V]),{actions:Q,mixer:H}=(0,l.f)(B,j||k),K=(0,n.useRef)(null),G=(0,n.useRef)(null);(0,n.useEffect)((()=>{if(!Q||0===Object.keys(Q).length)return void console.log("[PresenceAvatar] No animation actions available to play.");console.log("[PresenceAvatar] Available animation actions:",Object.keys(Q));const e=Object.keys(Q).filter((e=>e.toLowerCase().includes("talk")||e.toLowerCase().includes("speak")||e.toLowerCase().includes("f_talking")));e.length>0&&console.log("[PresenceAvatar] Available talking animations:",e);let t="";if("talking"===d&&e.length>0)if(e.length>1){let o=e.filter((e=>e!==G.current));0===o.length&&(o=e),t=o[Math.floor(Math.random()*o.length)],G.current=t}else t=e[0];else Q.idle?t="idle":Object.keys(Q).length>0&&(t=Object.keys(Q)[0],console.warn("[PresenceAvatar] 'idle' animation not found, falling back to ".concat(t)));if(!t||!Q[t])return void console.error("[PresenceAvatar] Target animation '".concat(t,"' not found in actions."));const o=Q[t],n=K.current,a=n?Q[n]:null;o?o===a&&null!==o&&void 0!==o&&o.isRunning()||(a&&a!==o&&a.fadeOut(.3),o.reset(),o.setLoop(r.LoopRepeat,1/0),o.setEffectiveWeight(1),o.setEffectiveTimeScale("talking"===d?.4:.3),o.fadeIn(.3).play(),K.current=t,console.log("[PresenceAvatar] Switched animation to: ".concat(t))):console.error("[PresenceAvatar] newAction '".concat(t,"' is unexpectedly null or undefined."))}),[Q,d]),(0,n.useEffect)((()=>{var e,t;if(!j)return;console.log("[PresenceAvatar] useEffect: scene loaded, setting up model..."),L.current=j,j.traverse((e=>{e instanceof r.SkinnedMesh&&e.morphTargetDictionary&&e.morphTargetInfluences&&(console.log("[PresenceAvatar-".concat(b.current,"] Found mesh with morph targets:"),{avatarType:R,meshId:e.uuid,morphTargets:Object.keys(e.morphTargetDictionary).length,mesh:e}),T.current=e)}));const o=[];if(j.traverse((e=>{if(e instanceof r.Mesh&&e.morphTargetDictionary&&e.morphTargetInfluences&&(console.log("[PresenceAvatar] Found mesh with morph targets:",e.name),T.current=e),e instanceof r.Bone){o.push(e.name);const t=e.name.toLowerCase();!t.includes("head")&&"head"!==t&&!t.includes("head_01")||t.includes("neck")||t.includes("eye")||t.includes("jaw")||t.includes("top")||t.includes("end")||(console.log("[PresenceAvatar] Found head bone:",e.name),D.current=e),(t.includes("neck")||"neck"===t||t.includes("neck_01"))&&(console.log("[PresenceAvatar] Found neck bone:",e.name),P.current=e)}})),console.log("[PresenceAvatar] All bones found in scene:",o),console.log("[PresenceAvatar] Head bone set:",!!D.current,null===(e=D.current)||void 0===e?void 0:e.name),console.log("[PresenceAvatar] Neck bone set:",!!P.current,null===(t=P.current)||void 0===t?void 0:t.name),D.current&&(D.current.rotation.x=0,D.current.rotation.y=0,D.current.rotation.z=0,M.current=D.current.quaternion.clone(),console.log("[PresenceAvatar] Reset and stored head initial position")),P.current&&(P.current.rotation.x=0,P.current.rotation.y=0,P.current.rotation.z=0,S.current=P.current.quaternion.clone(),console.log("[PresenceAvatar] Reset and stored neck initial position")),console.log("[PresenceAvatar] Model setup complete",{hasMorphTargets:!!T.current,hasHeadBone:!!D.current,hasNeckBone:!!P.current}),k.current){for(;k.current.children.length>0;)k.current.remove(k.current.children[0]);k.current.add(j)}console.log("[PresenceAvatar] Model setup complete",{hasMorphTargets:!!T.current,hasHeadBone:!!D.current,hasNeckBone:!!P.current})}),[j]),(0,n.useEffect)((()=>{if(o){var e,t;let n;if(null!==(e=o.head)&&void 0!==e&&e.rotation){const e=o.head.rotation;if("pitch"in e&&"yaw"in e&&"roll"in e)n=e;else if("x"in e&&"y"in e&&"z"in e&&"w"in e){const t=new r.Quaternion(e.x,e.y,e.z,e.w),o=(new r.Euler).setFromQuaternion(t);n={pitch:o.x,yaw:o.y,roll:o.z}}}else o.headRotation&&(n=o.headRotation);if(!n&&o.rotation&&(n=o.rotation),!n&&o.head){const e=o.head;void 0===e.pitch&&void 0===e.yaw&&void 0===e.roll||(n=e)}n&&"object"===typeof n||(n={pitch:0,yaw:0,roll:0}),n={pitch:"number"===typeof n.pitch?n.pitch:0,yaw:"number"===typeof n.yaw?n.yaw:0,roll:"number"===typeof n.roll?n.roll:0};const a={facialExpressions:(null===(t=o.face)||void 0===t?void 0:t.shapes)||o.facialExpressions||{},headRotation:n};x.current=a,a.facialExpressions&&Object.keys(a.facialExpressions).length>0&&console.log("[PresenceAvatar] Facial expressions:",Object.keys(a.facialExpressions).length),a.headRotation&&console.log("[PresenceAvatar] Head rotation data present:",a.headRotation)}else x.current={facialExpressions:{},headRotation:void 0}}),[o]);(0,n.useMemo)((()=>{var e,t;if(!o||void 0===o)return null;let n;if(null!==(e=o.head)&&void 0!==e&&e.rotation){const e=o.head.rotation;if("pitch"in e&&"yaw"in e&&"roll"in e)n=e;else if("x"in e&&"y"in e&&"z"in e&&"w"in e){const t=new r.Quaternion(e.x,e.y,e.z,e.w),o=(new r.Euler).setFromQuaternion(t);n={pitch:o.x,yaw:o.y,roll:o.z}}}else o.headRotation&&(n=o.headRotation);if(!n&&o.rotation&&(n=o.rotation),!n&&o.head){const e=o.head;void 0===e.pitch&&void 0===e.yaw&&void 0===e.roll||(n=e)}n&&"object"===typeof n||(n={pitch:0,yaw:0,roll:0}),n={pitch:"number"===typeof n.pitch?n.pitch:0,yaw:"number"===typeof n.yaw?n.yaw:0,roll:"number"===typeof n.roll?n.roll:0};const a={facialExpressions:(null===(t=o.face)||void 0===t?void 0:t.shapes)||o.facialExpressions||{},headRotation:n};return Object.keys(a.facialExpressions).length>0&&console.log("[PresenceAvatar] Processed tracking data with",Object.keys(a.facialExpressions).length,"expressions"),a}),[o]);return(0,n.useEffect)((()=>{j&&j.traverse((e=>{e instanceof r.Mesh&&(e.frustumCulled=!0,e.material&&"map"in e.material&&e.material.map&&(e.material.map.minFilter=r.LinearMipMapLinearFilter,e.material.map.generateMipmaps=!0))}))}),[j]),(0,a.F)(((e,t)=>{A.current++;const n=T.current;if(!L.current)return;const a=60*e.clock.elapsedTime;A.current=Math.floor(a),H&&H.update(t);const i=x.current;if(!i||!T.current||!T.current.morphTargetInfluences)return;if(!x.current){if(D.current){const e=.001*Date.now(),t=.05*Math.sin(.5*e);D.current.rotation.x=m(D.current.rotation.x,t,.1)}return void(A.current%300===0&&console.log("[PresenceAvatar useFrame] No tracking data"))}A.current%60===0&&console.log("[PresenceAvatar useFrame] Processing tracking data:",x.current);const l={},s=y&&Object.keys(y).length>0,c="coach"===(void 0===o?"coach":"user");if(A.current%30===0&&console.log("[PresenceAvatar] Lip sync check:",{animationName:d,hasMorphTargetDictionary:!(null===n||void 0===n||!n.morphTargetDictionary),morphTargetKeys:null!==n&&void 0!==n&&n.morphTargetDictionary?Object.keys(n.morphTargetDictionary).slice(0,10):[],hasAudioData:!!v&&v.length>0,isCoachAvatar:c,meshType:null===n||void 0===n?void 0:n.type,meshName:null===n||void 0===n?void 0:n.name}),"talking"===d&&v&&v.length>0&&null!==n&&void 0!==n&&n.morphTargetDictionary){if(!1&&c){const e=Date.now()/1e3,t=.5*(Math.sin(5*e)+1);console.log("[PresenceAvatar] TEST MODE - Forcing lip sync:",t);let o=!1;return["jawOpen","mouthOpen","viseme_aa","viseme_O","mouthSmileLeft","mouthSmileRight","mouthLeft","mouthRight","mouthPucker","mouthFunnel","mouthDimpleLeft","mouthDimpleRight","mouthStretchLeft","mouthStretchRight","mouthRollLower","mouthRollUpper","mouthShrugLower","mouthShrugUpper","mouthPressLeft","mouthPressRight","mouthLowerDownLeft","mouthLowerDownRight","mouthUpperUpLeft","mouthUpperUpRight"].forEach((e=>{if(null!==n&&void 0!==n&&n.morphTargetDictionary&&void 0!==n.morphTargetDictionary[e]){const r=n.morphTargetDictionary[e];n.morphTargetInfluences&&void 0!==r&&(n.morphTargetInfluences[r]=t,o=!0,A.current%30===0&&console.log("[PresenceAvatar] TEST MODE - Applied to ".concat(e,":"),t))}})),void(o||A.current%60!==0||console.error("[PresenceAvatar] TEST MODE - No mouth morph targets found! Available targets:",Object.keys((null===n||void 0===n?void 0:n.morphTargetDictionary)||{})))}let e=0;const t=Math.min(64,v.length);let o=0;for(let n=0;n<t;n++){let t=1;n>=2&&n<=20&&(t=2);e+=v[n]*t,o=Math.max(o,v[n])}const a=t>0?e/t/255:0,i=o/255,l=Math.max(a,.7*i),s=["jawOpen","mouthOpen","viseme_aa","viseme_O","0","1"];let u=!1;for(const c of s)if(null!==n&&void 0!==n&&n.morphTargetDictionary&&void 0!==n.morphTargetDictionary[c]){const t=r.MathUtils.clamp(2*l,0,.4),s=n.morphTargetDictionary[c];if(n.morphTargetInfluences&&void 0!==s&&(n.morphTargetInfluences[s]=t),"jawOpen"===c||"mouthOpen"===c){["mouthSmileLeft","mouthSmileRight","mouthLeft","mouthRight","mouthPucker","mouthFunnel","mouthDimpleLeft","mouthDimpleRight"].forEach((e=>{if(null!==n&&void 0!==n&&n.morphTargetDictionary&&void 0!==n.morphTargetDictionary[e]){const o=n.morphTargetDictionary[e];n.morphTargetInfluences&&(n.morphTargetInfluences[o]=.3*t)}}))}if("0"===c&&null!==n&&void 0!==n&&n.morphTargetDictionary&&void 0!==n.morphTargetDictionary[1]){const e=n.morphTargetDictionary[1];n.morphTargetInfluences&&void 0!==e&&(n.morphTargetInfluences[e]=.5*t)}A.current%30===0&&console.log("[PresenceAvatar] Lip sync applied:",{target:c,averageEnergy:a,peakEnergy:i,combinedEnergy:l,lipSyncValue:t,morphIndex:s,totalEnergy:e,maxEnergy:o,audioDataLength:v.length,audioDataSample:Array.from(v.slice(0,10))}),u=!0;break}u||console.warn("[PresenceAvatar] No jaw/mouth morph target found! Available targets:",Object.keys((null===n||void 0===n?void 0:n.morphTargetDictionary)||{}))}if(s)Object.entries(y).forEach((e=>{let[t,o]=e;if("number"!==typeof o)return;const n=u[t];if(n){var a;const e=null!==(a=n.amplify)&&void 0!==a?a:1,t=r.MathUtils.clamp(Number(o)*e,0,1);l[n.target]=Math.max(l[n.target]||0,t)}}));else if(null!==i&&void 0!==i&&i.facialExpressions||null!==i&&void 0!==i&&i.expressions){var p;const e=null!==(p=null===i||void 0===i?void 0:i.facialExpressions)&&void 0!==p?p:null===i||void 0===i?void 0:i.expressions;e&&Object.entries(e).forEach((e=>{let[t,o]=e;if("number"!==typeof o)return;const n=h[t];if(n){var a;const e=null!==(a=n.amplify)&&void 0!==a?a:1,i=Number(o),s=r.MathUtils.clamp(i*e,0,1);s>.3&&(t.includes("mouth")||t.includes("smile"))&&console.log("[PresenceAvatar] Expression: ".concat(t," = ").concat(s)),n.targets.forEach((e=>{l[e]=Math.max(l[e]||0,s)}))}}))}if(null!==n&&void 0!==n&&n.morphTargetDictionary&&null!==n&&void 0!==n&&n.morphTargetInfluences){const e=["jawOpen","mouthOpen","viseme_aa","viseme_O","mouthSmileLeft","mouthSmileRight","mouthLeft","mouthRight","mouthPucker"];Object.keys(n.morphTargetDictionary).forEach((t=>{const o=n.morphTargetDictionary[t];if(void 0!==o){if("talking"===d&&e.includes(t))return;const r=l[t]||0,a=void 0!==n.morphTargetInfluences[o]?n.morphTargetInfluences[o]:0;Math.abs(a-r)>.001?n.morphTargetInfluences[o]=m(a,r,.7):0===r&&0!==a&&(n.morphTargetInfluences[o]=0)}}))}const f=Date.now();if(f-O.current>5e3){let e=0;null!==n&&void 0!==n&&n.morphTargetInfluences&&n.morphTargetInfluences.forEach((t=>{t>.01&&e++})),e>0&&console.log("[PresenceAvatar] Active blendshapes: ".concat(e)),O.current=f}if(A.current%60===0&&console.log("[PresenceAvatarMasculine/Dougie] Frame update:",{hasMesh:!!n,morphTargetCount:null!==n&&void 0!==n&&n.morphTargetDictionary?Object.keys(n.morphTargetDictionary).length:0,morphTargets:null!==n&&void 0!==n&&n.morphTargetDictionary?Object.keys(n.morphTargetDictionary).slice(0,5):[],hasEmotionalBlendshapes:!!y&&Object.keys(y).length>0,emotions:y,animationName:d,audioDataLength:(null===v||void 0===v?void 0:v.length)||0,participantId:g}),null!==i&&void 0!==i&&i.headRotation&&D.current&&!c){const e=i.headRotation;if(e&&"object"===typeof e){const t=.8;if("number"===typeof e.pitch){const o=r.MathUtils.clamp(e.pitch,-.8,.8);D.current.rotation.x=m(D.current.rotation.x,o,t)}if("number"===typeof e.yaw){const o=r.MathUtils.clamp(.9*e.yaw,-.7,.7);D.current.rotation.y=m(D.current.rotation.y,o,t)}if("number"===typeof e.roll){const o=r.MathUtils.clamp(.8*e.roll,-.4,.4);D.current.rotation.z=m(D.current.rotation.z,o,t)}P.current&&(P.current.rotation.x=m(P.current.rotation.x,.3*D.current.rotation.x,t),P.current.rotation.y=m(P.current.rotation.y,.3*D.current.rotation.y,t))}}else if(c&&D.current){const e=.001*Date.now(),t=.02*Math.sin(.5*e);D.current.rotation.x=m(D.current.rotation.x,t,.1)}})),(0,n.useEffect)((()=>(console.log("[PresenceAvatarMasculine] Component mounted for Dougie, participantId:",g),()=>{console.log("[PresenceAvatarMasculine] Component unmounted")})),[g]),j&&L.current?(console.log("[PresenceAvatar] Rendering. Scene:",j,"ModelRootRef:",L.current),(0,c.jsx)("group",{ref:k,position:p,scale:f,children:L.current&&(0,c.jsx)("primitive",{object:L.current,dispose:null})})):null})),f=p}}]);