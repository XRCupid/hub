{"version":3,"file":"static/js/5707.a8845ca7.chunk.js","mappings":"8MAQAA,EAAAA,EAAAA,GAAO,CAAEC,eAAe,OAOjB,MAAMC,EAA8DC,IAGpE,IAHqE,QAC1EC,GAAU,EAAI,QACdC,EAAU,UACXF,EACC,MAAM,GAAEG,EAAE,MAAEC,EAAK,OAAEC,IAAWC,EAAAA,EAAAA,KAExBC,GAAWC,EAAAA,EAAAA,UAAQ,KACvB,OAAQN,GACN,IAAK,MACH,MAAO,CACLO,MAAO,CAAEC,UAAW,GAAKC,mBAAoB,GAAKC,mBAAoB,MACtEC,UAAW,CAAEC,OAAQ,IAAIC,EAAAA,QAAc,KAAO,OAC9CC,SAAU,CAAEC,SAAU,GAAKH,OAAQ,IACnCI,MAAO,CAAEC,QAAS,MAEtB,IAAK,OACH,MAAO,CACLV,MAAO,CAAEC,UAAW,GAAKC,mBAAoB,GAAKC,mBAAoB,IACtEC,UAAW,CAAEC,OAAQ,IAAIC,EAAAA,QAAc,KAAO,OAC9CC,SAAU,CAAEC,SAAU,GAAKH,OAAQ,IACnCI,MAAO,CAAEC,QAAS,MAEtB,QACE,MAAO,CACLV,MAAO,CAAEC,UAAW,GAAKC,mBAAoB,GAAKC,mBAAoB,KACtEC,UAAW,CAAEC,OAAQ,IAAIC,EAAAA,QAAc,KAAO,OAC9CC,SAAU,CAAEC,SAAU,GAAKH,OAAQ,IACnCI,MAAO,CAAEC,QAAS,SAGvB,CAACjB,IAEJ,OAAKD,GAGHmB,EAAAA,EAAAA,MAACtB,EAAAA,GAAc,CAAAuB,SAAA,EACbC,EAAAA,EAAAA,KAACC,EAAAA,GAAK,CACJb,UAAWH,EAASE,MAAMC,UAC1BC,mBAAoBJ,EAASE,MAAME,mBACnCC,mBAAoBL,EAASE,MAAMG,mBACnCY,cAAeC,EAAAA,GAAcC,OAE/BJ,EAAAA,EAAAA,KAACK,EAAAA,GAAmB,CAClBb,OAAQP,EAASM,UAAUC,OAC3BU,cAAeC,EAAAA,GAAcG,UAE/BN,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,CACPZ,SAAUV,EAASS,SAASC,SAC5BH,OAAQP,EAASS,SAASF,OAC1BU,cAAeC,EAAAA,GAAcG,UAE/BN,EAAAA,EAAAA,KAACQ,EAAAA,GAAK,CACJX,QAASZ,EAASW,MAAMC,QACxBK,cAAeC,EAAAA,GAAcM,aArBd,K","sources":["components/WorkingPostProcessing.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { extend, useThree } from '@react-three/fiber';\nimport { EffectComposer } from '@react-three/postprocessing';\nimport { Bloom, ChromaticAberration, Vignette, Noise } from '@react-three/postprocessing';\nimport { BlendFunction } from 'postprocessing';\nimport * as THREE from 'three';\n\n// Extend Three.js objects for React Three Fiber\nextend({ EffectComposer });\n\ninterface WorkingPostProcessingProps {\n  enabled?: boolean;\n  quality?: 'low' | 'medium' | 'high';\n}\n\nexport const WorkingPostProcessing: React.FC<WorkingPostProcessingProps> = ({ \n  enabled = true, \n  quality = 'medium' \n}) => {\n  const { gl, scene, camera } = useThree();\n  \n  const settings = useMemo(() => {\n    switch (quality) {\n      case 'low':\n        return {\n          bloom: { intensity: 0.3, luminanceThreshold: 0.9, luminanceSmoothing: 0.025 },\n          chromatic: { offset: new THREE.Vector2(0.001, 0.001) },\n          vignette: { darkness: 0.3, offset: 0.3 },\n          noise: { opacity: 0.02 }\n        };\n      case 'high':\n        return {\n          bloom: { intensity: 0.8, luminanceThreshold: 0.7, luminanceSmoothing: 0.1 },\n          chromatic: { offset: new THREE.Vector2(0.003, 0.003) },\n          vignette: { darkness: 0.6, offset: 0.5 },\n          noise: { opacity: 0.05 }\n        };\n      default: // medium\n        return {\n          bloom: { intensity: 0.5, luminanceThreshold: 0.8, luminanceSmoothing: 0.05 },\n          chromatic: { offset: new THREE.Vector2(0.002, 0.002) },\n          vignette: { darkness: 0.4, offset: 0.4 },\n          noise: { opacity: 0.03 }\n        };\n    }\n  }, [quality]);\n\n  if (!enabled) return null;\n\n  return (\n    <EffectComposer>\n      <Bloom \n        intensity={settings.bloom.intensity}\n        luminanceThreshold={settings.bloom.luminanceThreshold}\n        luminanceSmoothing={settings.bloom.luminanceSmoothing}\n        blendFunction={BlendFunction.ADD}\n      />\n      <ChromaticAberration \n        offset={settings.chromatic.offset}\n        blendFunction={BlendFunction.NORMAL}\n      />\n      <Vignette \n        darkness={settings.vignette.darkness}\n        offset={settings.vignette.offset}\n        blendFunction={BlendFunction.NORMAL}\n      />\n      <Noise \n        opacity={settings.noise.opacity}\n        blendFunction={BlendFunction.OVERLAY}\n      />\n    </EffectComposer>\n  );\n};\n"],"names":["extend","EffectComposer","WorkingPostProcessing","_ref","enabled","quality","gl","scene","camera","useThree","settings","useMemo","bloom","intensity","luminanceThreshold","luminanceSmoothing","chromatic","offset","THREE","vignette","darkness","noise","opacity","_jsxs","children","_jsx","Bloom","blendFunction","BlendFunction","ADD","ChromaticAberration","NORMAL","Vignette","Noise","OVERLAY"],"sourceRoot":""}