{"version":3,"file":"static/js/8462.ae3badbd.chunk.js","mappings":"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","sources":["webpack://hub/./src/components/NPCSpeedDatingModule.css?09f6","components/NPCSpeedDatingModule.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import React, { useState, useEffect } from 'react';\nimport NPCDateCall from './NPCDateCall';\nimport './NPCSpeedDatingModule.css';\n\ninterface NPCProfile {\n  id: string;\n  name: string;\n  archetype: string;\n  description: string;\n  image: string;\n  chemistry: number;\n  conversationStyle: string;\n}\n\nconst NPC_PROFILES: NPCProfile[] = [\n  {\n    id: 'sofia',\n    name: 'Sofia',\n    archetype: 'Adventurous Artist',\n    description: 'Creative soul who loves exploring galleries and hidden cafes',\n    image: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330?w=300',\n    chemistry: 0,\n    conversationStyle: 'playful and creative'\n  },\n  {\n    id: 'maya',\n    name: 'Maya',\n    archetype: 'Tech Entrepreneur',\n    description: 'Startup founder passionate about AI and sustainability',\n    image: 'https://images.unsplash.com/photo-1573496359142-b8d87734a5a2?w=300',\n    chemistry: 0,\n    conversationStyle: 'intellectual and driven'\n  },\n  {\n    id: 'luna',\n    name: 'Luna',\n    archetype: 'Wellness Coach',\n    description: 'Yoga instructor focused on mindfulness and healthy living',\n    image: 'https://images.unsplash.com/photo-1544005313-94ddf0286df2?w=300',\n    chemistry: 0,\n    conversationStyle: 'calm and insightful'\n  },\n  {\n    id: 'ava',\n    name: 'Ava',\n    archetype: 'Travel Blogger',\n    description: 'Globetrotter with stories from every continent',\n    image: 'https://images.unsplash.com/photo-1517841905240-472988babdf9?w=300',\n    chemistry: 0,\n    conversationStyle: 'adventurous and spontaneous'\n  }\n];\n\nconst NPCSpeedDatingModule: React.FC = () => {\n  const [currentNPC, setCurrentNPC] = useState<NPCProfile | null>(null);\n  const [matchHistory, setMatchHistory] = useState<NPCProfile[]>([]);\n  const [isInDate, setIsInDate] = useState(false);\n  const [timeRemaining, setTimeRemaining] = useState(180); // 3 minutes per date\n  const [showResults, setShowResults] = useState(false);\n  const [userName, setUserName] = useState('');\n  const [hasStarted, setHasStarted] = useState(false);\n\n  // Timer for speed dating rounds\n  useEffect(() => {\n    if (isInDate && timeRemaining > 0) {\n      const timer = setTimeout(() => setTimeRemaining(prev => prev - 1), 1000);\n      return () => clearTimeout(timer);\n    } else if (isInDate && timeRemaining === 0) {\n      endCurrentDate();\n    }\n  }, [isInDate, timeRemaining]);\n\n  const startSpeedDating = () => {\n    if (!userName.trim()) return;\n    setHasStarted(true);\n    startNextDate();\n  };\n\n  const startNextDate = () => {\n    const availableNPCs = NPC_PROFILES.filter(\n      npc => !matchHistory.find(match => match.id === npc.id)\n    );\n    \n    if (availableNPCs.length === 0) {\n      setShowResults(true);\n      return;\n    }\n    \n    const nextNPC = availableNPCs[Math.floor(Math.random() * availableNPCs.length)];\n    setCurrentNPC(nextNPC);\n    setIsInDate(true);\n    setTimeRemaining(180);\n  };\n\n  const endCurrentDate = () => {\n    if (currentNPC) {\n      // Simulate chemistry score based on interaction\n      const chemistryScore = Math.floor(Math.random() * 30) + 70; // 70-100\n      const npcWithChemistry = { ...currentNPC, chemistry: chemistryScore };\n      setMatchHistory(prev => [...prev, npcWithChemistry]);\n    }\n    setIsInDate(false);\n    setCurrentNPC(null);\n  };\n\n  const handleDateEnd = () => {\n    endCurrentDate();\n    if (matchHistory.length + 1 < NPC_PROFILES.length) {\n      setTimeout(startNextDate, 2000);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getTopMatches = () => {\n    return [...matchHistory]\n      .sort((a, b) => b.chemistry - a.chemistry)\n      .slice(0, 3);\n  };\n\n  if (showResults) {\n    const topMatches = getTopMatches();\n    \n    return (\n      <div className=\"speed-dating-results\">\n        <div className=\"results-card riso-card\">\n          <h2 className=\"results-title riso-text-offset\">Your Speed Dating Results!</h2>\n          \n          <div className=\"matches-section\">\n            <h3>Top Matches ðŸ’•</h3>\n            <div className=\"top-matches\">\n              {topMatches.map((match, index) => (\n                <div key={match.id} className=\"match-card\">\n                  <div className=\"match-rank\">#{index + 1}</div>\n                  <img src={match.image} alt={match.name} className=\"match-avatar\" />\n                  <h4>{match.name}</h4>\n                  <p className=\"match-archetype\">{match.archetype}</p>\n                  <div className=\"chemistry-score\">\n                    <span className=\"chemistry-label\">Chemistry</span>\n                    <div className=\"chemistry-bar\">\n                      <div \n                        className=\"chemistry-fill\"\n                        style={{ width: `${match.chemistry}%` }}\n                      />\n                    </div>\n                    <span className=\"chemistry-percent\">{match.chemistry}%</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          \n          <button \n            className=\"riso-button primary\"\n            onClick={() => window.location.reload()}\n          >\n            Try Again\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  if (!hasStarted) {\n    return (\n      <div className=\"speed-dating-module\">\n        <div className=\"intro-card riso-card\">\n          <h1 className=\"module-title riso-text-offset\">NPC Speed Dating</h1>\n          <p className=\"module-subtitle\">Meet 4 unique AI personalities in 3-minute dates!</p>\n          \n          <div className=\"npc-preview\">\n            {NPC_PROFILES.map(npc => (\n              <div key={npc.id} className=\"npc-preview-card\">\n                <img src={npc.image} alt={npc.name} />\n                <h4>{npc.name}</h4>\n                <p>{npc.archetype}</p>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"start-section\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter your name\"\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n              className=\"riso-input\"\n              onKeyPress={(e) => e.key === 'Enter' && startSpeedDating()}\n            />\n            <button \n              className=\"riso-button primary\"\n              onClick={startSpeedDating}\n              disabled={!userName.trim()}\n            >\n              Start Speed Dating\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (isInDate && currentNPC) {\n    return (\n      <div className=\"speed-dating-active\">\n        <div className=\"date-header riso-card\">\n          <div className=\"date-info\">\n            <h3>Speed Dating with {currentNPC.name}</h3>\n            <p>{currentNPC.archetype} - {currentNPC.conversationStyle}</p>\n          </div>\n          <div className=\"timer\">\n            <span className=\"timer-label\">Time Remaining</span>\n            <span className=\"timer-value\">{formatTime(timeRemaining)}</span>\n          </div>\n          <div className=\"date-progress\">\n            Date {matchHistory.length + 1} of {NPC_PROFILES.length}\n          </div>\n        </div>\n        \n        <NPCDateCall\n          npcName={currentNPC.name}\n          npcArchetype={currentNPC.archetype}\n          userName={userName}\n          onCallEnd={handleDateEnd}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"speed-dating-loading\">\n      <div className=\"riso-card\">\n        <h3>Preparing next date...</h3>\n        <div className=\"loading-spinner\" />\n      </div>\n    </div>\n  );\n};\n\nexport default NPCSpeedDatingModule;\n"],"names":["NPC_PROFILES","id","name","archetype","description","image","chemistry","conversationStyle","NPCSpeedDatingModule","currentNPC","setCurrentNPC","useState","matchHistory","setMatchHistory","isInDate","setIsInDate","timeRemaining","setTimeRemaining","showResults","setShowResults","userName","setUserName","hasStarted","setHasStarted","useEffect","timer","setTimeout","prev","clearTimeout","endCurrentDate","startSpeedDating","trim","startNextDate","availableNPCs","filter","npc","find","match","length","nextNPC","Math","floor","random","chemistryScore","npcWithChemistry","_objectSpread","handleDateEnd","formatTime","seconds","mins","secs","concat","toString","padStart","topMatches","sort","a","b","slice","_jsx","className","children","_jsxs","map","index","src","alt","style","width","onClick","window","location","reload","NPCDateCall","npcName","npcArchetype","onCallEnd","type","placeholder","value","onChange","e","target","onKeyPress","key","disabled"],"sourceRoot":""}