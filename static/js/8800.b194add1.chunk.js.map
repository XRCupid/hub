{"version":3,"file":"static/js/8800.b194add1.chunk.js","mappings":"4JAGO,MAAMA,UAAgCC,EAAAA,EAS3CC,WAAAA,GACEC,QAEA,KAXMC,SAAkB,GAAG,KACrBC,UAAY,CAClBC,OAAQ,EACRC,YAAY,GACZ,KACMC,gBAA+C,GAAG,KAClDC,mBAAoD,GAM1DC,KAAKC,WAAWC,IACdF,KAAKN,SAASS,KAAKD,KAEvB,CAGAE,WAAAA,GACE,MAAO,IAAIJ,KAAKN,SAClB,CAGAW,YAAAA,GACE,OAAAC,EAAAA,EAAAA,GAAA,GAAYN,KAAKL,UACnB,CAGAY,eAAAA,CAAgBX,EAAgBC,GAC9BG,KAAKL,UAAY,CAAEC,SAAQC,aAC7B,CAGAW,aAAAA,GACER,KAAKN,SAAW,EAClB,CAGAe,SAAAA,CAAUC,GACRV,KAAKF,gBAAgBK,KAAKO,GAE1BjB,MAAMgB,WAAWE,IACfD,EAAQC,KAEZ,CAGAC,YAAAA,CAAaF,GACXV,KAAKD,mBAAmBI,KAAKO,GAE7BjB,MAAMmB,cAAcC,IAClBH,EAAQG,KAEZ,E","sources":["services/HumeVoiceServiceWrapper.ts"],"sourcesContent":["import { HumeVoiceService } from './humeVoiceService';\n\n// Extended wrapper for HumeVoiceService to provide additional methods needed by VideoCallAnalytics\nexport class HumeVoiceServiceWrapper extends HumeVoiceService {\n  private messages: any[] = [];\n  private audioData = {\n    volume: 0,\n    isSpeaking: false\n  };\n  private emotionHandlers: ((emotions: any) => void)[] = [];\n  private transcriptHandlers: ((transcript: any) => void)[] = [];\n\n  constructor() {\n    super();\n    \n    // Set up callbacks to capture data\n    this.onMessage((message: any) => {\n      this.messages.push(message);\n    });\n  }\n\n  // Get all messages received\n  getMessages(): any[] {\n    return [...this.messages];\n  }\n\n  // Get audio data with volume and speaking status\n  getAudioData(): { volume: number; isSpeaking: boolean } {\n    return { ...this.audioData };\n  }\n\n  // Update audio data (called from audio processing)\n  updateAudioData(volume: number, isSpeaking: boolean): void {\n    this.audioData = { volume, isSpeaking };\n  }\n\n  // Clear messages\n  clearMessages(): void {\n    this.messages = [];\n  }\n\n  // Add emotion handler\n  onEmotion(handler: (emotions: any) => void): void {\n    this.emotionHandlers.push(handler);\n    // Also register with parent\n    super.onEmotion((emotions) => {\n      handler(emotions);\n    });\n  }\n\n  // Add transcript handler  \n  onTranscript(handler: (transcript: any) => void): void {\n    this.transcriptHandlers.push(handler);\n    // Also register with parent\n    super.onTranscript((transcript) => {\n      handler(transcript);\n    });\n  }\n}\n"],"names":["HumeVoiceServiceWrapper","HumeVoiceService","constructor","super","messages","audioData","volume","isSpeaking","emotionHandlers","transcriptHandlers","this","onMessage","message","push","getMessages","getAudioData","_objectSpread","updateAudioData","clearMessages","onEmotion","handler","emotions","onTranscript","transcript"],"sourceRoot":""}