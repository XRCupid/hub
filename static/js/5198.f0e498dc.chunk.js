"use strict";(self.webpackChunkhub=self.webpackChunkhub||[]).push([[5198],{75198:(e,r,t)=>{t.r(r),t.d(r,{SimpleArmTestAvatar:()=>a});var n=t(65043),o=t(29408),s=t(79183),l=t(81597),c=t(70579);const a=e=>{let{avatarUrl:r,position:t=[0,0,0],scale:a=1}=e;const i=(0,n.useRef)(null),{scene:u}=(0,l.p)(r),m=(0,n.useMemo)((()=>u.clone()),[u]),p=(0,n.useRef)(null),h=(0,n.useRef)(null);return(0,n.useEffect)((()=>{m&&(console.log("[SimpleArmTest] Finding bones..."),m.traverse((e=>{if(e instanceof o.Bone){const r=e.name.toLowerCase();console.log("[SimpleArmTest] Bone:",e.name),(r.includes("leftarm")||r.includes("arm_l")||r.includes("leftupperarm"))&&!r.includes("fore")&&(p.current=e,console.log("[SimpleArmTest] Found left arm:",e.name)),(r.includes("rightarm")||r.includes("arm_r")||r.includes("rightupperarm"))&&!r.includes("fore")&&(h.current=e,console.log("[SimpleArmTest] Found right arm:",e.name))}})),p.current&&(p.current.rotation.z=Math.PI/4,console.log("[SimpleArmTest] Set left arm down")),h.current&&(h.current.rotation.z=-Math.PI/4,console.log("[SimpleArmTest] Set right arm down")))}),[m]),(0,s.F)((e=>{const r=e.clock.getElapsedTime();p.current&&(p.current.rotation.z=Math.PI/4+.3*Math.sin(2*r)),h.current&&(h.current.rotation.z=-Math.PI/4+.3*Math.sin(2*r+Math.PI))})),(0,c.jsx)("group",{ref:i,position:t,scale:a,children:m&&(0,c.jsx)("primitive",{object:m})})}}}]);
//# sourceMappingURL=5198.f0e498dc.chunk.js.map