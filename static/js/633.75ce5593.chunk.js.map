{"version":3,"file":"static/js/633.75ce5593.chunk.js","mappings":"4JAKA,MAAMA,EAAa,yBAEJ,SAASC,EAAqBC,GAAwB,IAAvB,IAAEC,EAAMH,GAAYE,EAChE,MAAM,MAAEE,IAAUC,EAAAA,EAAAA,GAAQF,GAc1B,OAZAG,EAAAA,EAAAA,YAAU,KACHF,IACLG,QAAQC,MAAM,iDACdJ,EAAMK,UAAUC,IACVA,EAAMC,QAAUD,EAAME,wBACxBL,QAAQM,IAAI,gCAAiCH,EAAMI,MACnDP,QAAQM,IAAI,8CAA+CE,OAAOC,KAAKN,EAAME,4BAGjFL,QAAQU,cACP,CAACb,KAGFc,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,QAAS,SAE3B,C","sources":["components/GLBBlendshapeDebugger.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useGLTF } from '@react-three/drei';\n\n// Change this to your avatar URL if needed\n// Use your exported ARKit blendshape model by default\nconst AVATAR_URL = '/models/face-arkit.glb';\n\nexport default function GLBBlendshapeDebugger({ url = AVATAR_URL }) {\n  const { scene } = useGLTF(url);\n\n  useEffect(() => {\n    if (!scene) return;\n    console.group('[GLBBlendshapeDebugger] Blendshape Inspection');\n    scene.traverse((child) => {\n      if (child.isMesh && child.morphTargetDictionary) {\n        console.log('[GLBBlendshapeDebugger] Mesh:', child.name);\n        console.log('[GLBBlendshapeDebugger] Morph Target Names:', Object.keys(child.morphTargetDictionary));\n      }\n    });\n    console.groupEnd();\n  }, [scene]);\n\n  return (\n    <div style={{ display: 'none' }} /> // No visible UI, just logs\n  );\n}\n\n// To use: import and render <GLBBlendshapeDebugger /> somewhere in your app temporarily.\n"],"names":["AVATAR_URL","GLBBlendshapeDebugger","_ref","url","scene","useGLTF","useEffect","console","group","traverse","child","isMesh","morphTargetDictionary","log","name","Object","keys","groupEnd","_jsx","style","display"],"sourceRoot":""}